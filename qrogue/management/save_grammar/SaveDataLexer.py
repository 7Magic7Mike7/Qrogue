# Generated from D:/Workspaces/pycharm-workspace/Qrogue/qrogue/management/save_grammar\SaveData.g4 by ANTLR 4.12.0
import sys

from antlr4 import *

if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,43,374,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,1,0,1,0,1,1,1,1,1,1,1,1,1,
        1,1,1,1,2,1,2,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,
        5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,
        7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,
        8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,
        1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,
        1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,3,12,181,8,12,
        1,13,4,13,184,8,13,11,13,12,13,185,1,14,1,14,3,14,190,8,14,1,15,
        1,15,5,15,194,8,15,10,15,12,15,197,9,15,1,16,1,16,1,16,1,16,1,16,
        1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,
        3,16,217,8,16,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,18,
        1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,19,
        1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,22,
        1,22,1,23,1,23,1,24,1,24,1,25,1,25,1,25,1,26,1,26,1,26,1,27,1,27,
        1,28,1,28,1,28,4,28,271,8,28,11,28,12,28,272,1,29,3,29,276,8,29,
        1,29,1,29,4,29,280,8,29,11,29,12,29,281,1,30,5,30,285,8,30,10,30,
        12,30,288,9,30,1,30,3,30,291,8,30,1,30,1,30,1,31,1,31,1,32,1,32,
        1,33,1,33,1,34,1,34,3,34,303,8,34,1,35,1,35,5,35,307,8,35,10,35,
        12,35,310,9,35,1,35,1,35,1,36,1,36,3,36,316,8,36,1,36,1,36,1,37,
        1,37,1,37,1,37,3,37,324,8,37,1,37,3,37,327,8,37,1,38,1,38,1,38,4,
        38,332,8,38,11,38,12,38,333,1,39,4,39,337,8,39,11,39,12,39,338,1,
        39,1,39,1,40,4,40,344,8,40,11,40,12,40,345,1,40,1,40,1,41,1,41,1,
        41,1,41,5,41,354,8,41,10,41,12,41,357,9,41,1,41,1,41,1,41,1,41,1,
        41,1,42,1,42,1,42,1,42,5,42,368,8,42,10,42,12,42,371,9,42,1,42,1,
        42,2,308,355,0,43,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,
        21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,
        43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,
        65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,
        1,0,6,1,0,48,57,2,0,43,43,45,45,1,0,97,122,1,0,65,90,3,0,9,10,13,
        13,32,32,2,0,10,10,13,13,397,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,
        0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,
        17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,
        27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,
        37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,
        47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,
        57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,
        67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,
        77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,1,
        87,1,0,0,0,3,89,1,0,0,0,5,95,1,0,0,0,7,97,1,0,0,0,9,101,1,0,0,0,
        11,104,1,0,0,0,13,112,1,0,0,0,15,121,1,0,0,0,17,131,1,0,0,0,19,146,
        1,0,0,0,21,154,1,0,0,0,23,166,1,0,0,0,25,180,1,0,0,0,27,183,1,0,
        0,0,29,189,1,0,0,0,31,191,1,0,0,0,33,216,1,0,0,0,35,218,1,0,0,0,
        37,227,1,0,0,0,39,235,1,0,0,0,41,243,1,0,0,0,43,251,1,0,0,0,45,253,
        1,0,0,0,47,255,1,0,0,0,49,257,1,0,0,0,51,259,1,0,0,0,53,262,1,0,
        0,0,55,265,1,0,0,0,57,267,1,0,0,0,59,275,1,0,0,0,61,290,1,0,0,0,
        63,294,1,0,0,0,65,296,1,0,0,0,67,298,1,0,0,0,69,302,1,0,0,0,71,304,
        1,0,0,0,73,315,1,0,0,0,75,326,1,0,0,0,77,328,1,0,0,0,79,336,1,0,
        0,0,81,343,1,0,0,0,83,349,1,0,0,0,85,363,1,0,0,0,87,88,5,64,0,0,
        88,2,1,0,0,0,89,90,5,83,0,0,90,91,5,99,0,0,91,92,5,111,0,0,92,93,
        5,114,0,0,93,94,5,101,0,0,94,4,1,0,0,0,95,96,5,61,0,0,96,6,1,0,0,
        0,97,98,5,111,0,0,98,99,5,117,0,0,99,100,5,116,0,0,100,8,1,0,0,0,
        101,102,5,111,0,0,102,103,5,102,0,0,103,10,1,0,0,0,104,105,5,91,
        0,0,105,106,5,71,0,0,106,107,5,65,0,0,107,108,5,84,0,0,108,109,5,
        69,0,0,109,110,5,83,0,0,110,111,5,93,0,0,111,12,1,0,0,0,112,113,
        5,91,0,0,113,114,5,76,0,0,114,115,5,69,0,0,115,116,5,86,0,0,116,
        117,5,69,0,0,117,118,5,76,0,0,118,119,5,83,0,0,119,120,5,93,0,0,
        120,14,1,0,0,0,121,122,5,91,0,0,122,123,5,85,0,0,123,124,5,78,0,
        0,124,125,5,76,0,0,125,126,5,79,0,0,126,127,5,67,0,0,127,128,5,75,
        0,0,128,129,5,83,0,0,129,130,5,93,0,0,130,16,1,0,0,0,131,132,5,91,
        0,0,132,133,5,65,0,0,133,134,5,67,0,0,134,135,5,72,0,0,135,136,5,
        73,0,0,136,137,5,69,0,0,137,138,5,86,0,0,138,139,5,69,0,0,139,140,
        5,77,0,0,140,141,5,69,0,0,141,142,5,78,0,0,142,143,5,84,0,0,143,
        144,5,83,0,0,144,145,5,93,0,0,145,18,1,0,0,0,146,147,5,115,0,0,147,
        148,5,101,0,0,148,149,5,99,0,0,149,150,5,111,0,0,150,151,5,110,0,
        0,151,152,5,100,0,0,152,153,5,115,0,0,153,20,1,0,0,0,154,155,3,55,
        27,0,155,156,3,55,27,0,156,157,5,100,0,0,157,158,3,55,27,0,158,159,
        3,55,27,0,159,160,5,109,0,0,160,161,3,55,27,0,161,162,3,55,27,0,
        162,163,3,55,27,0,163,164,3,55,27,0,164,165,5,121,0,0,165,22,1,0,
        0,0,166,167,3,55,27,0,167,168,3,55,27,0,168,169,5,58,0,0,169,170,
        3,55,27,0,170,171,3,55,27,0,171,172,5,58,0,0,172,173,3,55,27,0,173,
        174,3,55,27,0,174,24,1,0,0,0,175,181,3,55,27,0,176,177,3,55,27,0,
        177,178,3,55,27,0,178,181,1,0,0,0,179,181,3,57,28,0,180,175,1,0,
        0,0,180,176,1,0,0,0,180,179,1,0,0,0,181,26,1,0,0,0,182,184,3,69,
        34,0,183,182,1,0,0,0,184,185,1,0,0,0,185,183,1,0,0,0,185,186,1,0,
        0,0,186,28,1,0,0,0,187,190,3,69,34,0,188,190,3,55,27,0,189,187,1,
        0,0,0,189,188,1,0,0,0,190,30,1,0,0,0,191,195,3,69,34,0,192,194,3,
        29,14,0,193,192,1,0,0,0,194,197,1,0,0,0,195,193,1,0,0,0,195,196,
        1,0,0,0,196,32,1,0,0,0,197,195,1,0,0,0,198,199,5,78,0,0,199,200,
        5,111,0,0,200,201,5,114,0,0,201,202,5,116,0,0,202,217,5,104,0,0,
        203,204,5,69,0,0,204,205,5,97,0,0,205,206,5,115,0,0,206,217,5,116,
        0,0,207,208,5,83,0,0,208,209,5,111,0,0,209,210,5,117,0,0,210,211,
        5,116,0,0,211,217,5,104,0,0,212,213,5,87,0,0,213,214,5,101,0,0,214,
        215,5,115,0,0,215,217,5,116,0,0,216,198,1,0,0,0,216,203,1,0,0,0,
        216,207,1,0,0,0,216,212,1,0,0,0,217,34,1,0,0,0,218,219,5,116,0,0,
        219,220,5,117,0,0,220,221,5,116,0,0,221,222,5,111,0,0,222,223,5,
        114,0,0,223,224,5,105,0,0,224,225,5,97,0,0,225,226,5,108,0,0,226,
        36,1,0,0,0,227,228,5,116,0,0,228,229,5,114,0,0,229,230,5,105,0,0,
        230,231,5,103,0,0,231,232,5,103,0,0,232,233,5,101,0,0,233,234,5,
        114,0,0,234,38,1,0,0,0,235,236,5,81,0,0,236,237,5,114,0,0,237,238,
        5,111,0,0,238,239,5,103,0,0,239,240,5,117,0,0,240,241,5,101,0,0,
        241,242,5,60,0,0,242,40,1,0,0,0,243,244,5,62,0,0,244,245,5,81,0,
        0,245,246,5,114,0,0,246,247,5,111,0,0,247,248,5,103,0,0,248,249,
        5,117,0,0,249,250,5,101,0,0,250,42,1,0,0,0,251,252,5,126,0,0,252,
        44,1,0,0,0,253,254,5,124,0,0,254,46,1,0,0,0,255,256,5,44,0,0,256,
        48,1,0,0,0,257,258,5,35,0,0,258,50,1,0,0,0,259,260,5,46,0,0,260,
        261,5,46,0,0,261,52,1,0,0,0,262,263,5,95,0,0,263,264,5,95,0,0,264,
        54,1,0,0,0,265,266,7,0,0,0,266,56,1,0,0,0,267,268,3,55,27,0,268,
        270,3,55,27,0,269,271,3,55,27,0,270,269,1,0,0,0,271,272,1,0,0,0,
        272,270,1,0,0,0,272,273,1,0,0,0,273,58,1,0,0,0,274,276,3,55,27,0,
        275,274,1,0,0,0,275,276,1,0,0,0,276,277,1,0,0,0,277,279,5,46,0,0,
        278,280,3,55,27,0,279,278,1,0,0,0,280,281,1,0,0,0,281,279,1,0,0,
        0,281,282,1,0,0,0,282,60,1,0,0,0,283,285,3,55,27,0,284,283,1,0,0,
        0,285,288,1,0,0,0,286,284,1,0,0,0,286,287,1,0,0,0,287,291,1,0,0,
        0,288,286,1,0,0,0,289,291,3,59,29,0,290,286,1,0,0,0,290,289,1,0,
        0,0,291,292,1,0,0,0,292,293,5,106,0,0,293,62,1,0,0,0,294,295,7,1,
        0,0,295,64,1,0,0,0,296,297,7,2,0,0,297,66,1,0,0,0,298,299,7,3,0,
        0,299,68,1,0,0,0,300,303,3,65,32,0,301,303,3,67,33,0,302,300,1,0,
        0,0,302,301,1,0,0,0,303,70,1,0,0,0,304,308,5,34,0,0,305,307,9,0,
        0,0,306,305,1,0,0,0,307,310,1,0,0,0,308,309,1,0,0,0,308,306,1,0,
        0,0,309,311,1,0,0,0,310,308,1,0,0,0,311,312,5,34,0,0,312,72,1,0,
        0,0,313,316,5,95,0,0,314,316,3,69,34,0,315,313,1,0,0,0,315,314,1,
        0,0,0,316,317,1,0,0,0,317,318,3,69,34,0,318,74,1,0,0,0,319,320,5,
        61,0,0,320,327,5,61,0,0,321,324,5,95,0,0,322,324,3,55,27,0,323,321,
        1,0,0,0,323,322,1,0,0,0,324,325,1,0,0,0,325,327,3,55,27,0,326,319,
        1,0,0,0,326,323,1,0,0,0,327,76,1,0,0,0,328,331,5,42,0,0,329,332,
        3,69,34,0,330,332,3,55,27,0,331,329,1,0,0,0,331,330,1,0,0,0,332,
        333,1,0,0,0,333,331,1,0,0,0,333,334,1,0,0,0,334,78,1,0,0,0,335,337,
        7,4,0,0,336,335,1,0,0,0,337,338,1,0,0,0,338,336,1,0,0,0,338,339,
        1,0,0,0,339,340,1,0,0,0,340,341,6,39,0,0,341,80,1,0,0,0,342,344,
        5,59,0,0,343,342,1,0,0,0,344,345,1,0,0,0,345,343,1,0,0,0,345,346,
        1,0,0,0,346,347,1,0,0,0,347,348,6,40,0,0,348,82,1,0,0,0,349,350,
        5,47,0,0,350,351,5,42,0,0,351,355,1,0,0,0,352,354,9,0,0,0,353,352,
        1,0,0,0,354,357,1,0,0,0,355,356,1,0,0,0,355,353,1,0,0,0,356,358,
        1,0,0,0,357,355,1,0,0,0,358,359,5,42,0,0,359,360,5,47,0,0,360,361,
        1,0,0,0,361,362,6,41,0,0,362,84,1,0,0,0,363,364,5,47,0,0,364,365,
        5,47,0,0,365,369,1,0,0,0,366,368,8,5,0,0,367,366,1,0,0,0,368,371,
        1,0,0,0,369,367,1,0,0,0,369,370,1,0,0,0,370,372,1,0,0,0,371,369,
        1,0,0,0,372,373,6,42,0,0,373,86,1,0,0,0,22,0,180,185,189,195,216,
        272,275,281,286,290,302,308,315,323,326,331,333,338,345,355,369,
        1,6,0,0
    ]

class SaveDataLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    GATES_HEADER = 6
    LEVELS_HEADER = 7
    UNLOCKS_HEADER = 8
    ACHIEVEMENTS_HEADER = 9
    DURATION_UNIT = 10
    DATE = 11
    TIME = 12
    VALUE = 13
    NAME_STD = 14
    NAME_SYMBOL = 15
    NAME_SPECIAL = 16
    DIRECTION = 17
    TUTORIAL_LITERAL = 18
    TRIGGER_LITERAL = 19
    HEADER = 20
    ENDER = 21
    HORIZONTAL_SEPARATOR = 22
    VERTICAL_SEPARATOR = 23
    LIST_SEPARATOR = 24
    WALL = 25
    EMPTY_HALLWAY = 26
    EMPTY_ROOM = 27
    DIGIT = 28
    INTEGER = 29
    FLOAT = 30
    IMAG_NUMBER = 31
    SIGN = 32
    CHARACTER_LOW = 33
    CHARACTER_UP = 34
    CHARACTER = 35
    TEXT = 36
    ROOM_ID = 37
    HALLWAY_ID = 38
    REFERENCE = 39
    WS = 40
    UNIVERSAL_SEPARATOR = 41
    COMMENT = 42
    LINE_COMMENT = 43

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'@'", "'Score'", "'='", "'out'", "'of'", "'[GATES]'", "'[LEVELS]'", 
            "'[UNLOCKS]'", "'[ACHIEVEMENTS]'", "'seconds'", "'tutorial'", 
            "'trigger'", "'Qrogue<'", "'>Qrogue'", "'~'", "'|'", "','", 
            "'#'", "'..'", "'__'" ]

    symbolicNames = [ "<INVALID>",
            "GATES_HEADER", "LEVELS_HEADER", "UNLOCKS_HEADER", "ACHIEVEMENTS_HEADER", 
            "DURATION_UNIT", "DATE", "TIME", "VALUE", "NAME_STD", "NAME_SYMBOL", 
            "NAME_SPECIAL", "DIRECTION", "TUTORIAL_LITERAL", "TRIGGER_LITERAL", 
            "HEADER", "ENDER", "HORIZONTAL_SEPARATOR", "VERTICAL_SEPARATOR", 
            "LIST_SEPARATOR", "WALL", "EMPTY_HALLWAY", "EMPTY_ROOM", "DIGIT", 
            "INTEGER", "FLOAT", "IMAG_NUMBER", "SIGN", "CHARACTER_LOW", 
            "CHARACTER_UP", "CHARACTER", "TEXT", "ROOM_ID", "HALLWAY_ID", 
            "REFERENCE", "WS", "UNIVERSAL_SEPARATOR", "COMMENT", "LINE_COMMENT" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "GATES_HEADER", 
                  "LEVELS_HEADER", "UNLOCKS_HEADER", "ACHIEVEMENTS_HEADER", 
                  "DURATION_UNIT", "DATE", "TIME", "VALUE", "NAME_STD", 
                  "NAME_SYMBOL", "NAME_SPECIAL", "DIRECTION", "TUTORIAL_LITERAL", 
                  "TRIGGER_LITERAL", "HEADER", "ENDER", "HORIZONTAL_SEPARATOR", 
                  "VERTICAL_SEPARATOR", "LIST_SEPARATOR", "WALL", "EMPTY_HALLWAY", 
                  "EMPTY_ROOM", "DIGIT", "INTEGER", "FLOAT", "IMAG_NUMBER", 
                  "SIGN", "CHARACTER_LOW", "CHARACTER_UP", "CHARACTER", 
                  "TEXT", "ROOM_ID", "HALLWAY_ID", "REFERENCE", "WS", "UNIVERSAL_SEPARATOR", 
                  "COMMENT", "LINE_COMMENT" ]

    grammarFileName = "SaveData.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.12.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None



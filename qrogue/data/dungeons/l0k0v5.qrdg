Qrogue<
// not used at the moment
Name = "Lesson 5"
Description = Speaker "0" "Maybe you've already stumbled across it when trying to solve previous //02Puzzles//. But not only digits in a room can be entangled. You can also create entanglement of qubits in your //02Circuit//."
NO_TELEPORTER

// Introduced Concepts:
// Entanglement in Puzzles, Boss fight?

[Robot]
2 qubits [ *xgate, *cxgate, *hgate ]
circuit_space = 4
maxenergy = 10

[Layout]
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
| __ .. an == am == al == ak .. __ .. __ |
| ..    21    ==    ..    20    ..    .. |
| __ .. cc == dd 11 ee 11 gg == SR .. __ |
| ..    20    ==    ..    21    ..    .. |
| __ .. bn == bm == bl == bk .. __ .. __ |
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


[Custom Rooms]

SR (Spawn):
#############
# _ _ _ _ _ #
# _ _ _ _ _ #
# _ _ _ _ _ #
# _ _ _ _ _ #
# _ _ b _ _ #
#############
b *antiEntangle key 1

ab (Story):
#############
# _ _ _ _ _ #
# o _ _ _ o #
# _ 0 _ 0 _ #
# o _ _ _ o #
# _ _ _ _ _ #
#############
0 *entanglement1 tutorial *entanglement1
0 *entanglement0 tutorial *entanglement0

gg (Story):
#############
# _ _ _ _ _ #
# o o o o _ #
# _ _ m 0 m #
# o o o o _ #
# _ _ _ _ _ #
#############
m *doneMsg trigger *done
m 1 *entangledDoors

ak (Wild):
#############
# _ _ _ _ _ #
# o 0 o 0 _ #
# _ _ _ o _ #
# 2 3 _ 0 _ #
# 1 4 _ o _ #
#############

bk (Wild):
#############
# 1 4 _ o _ #
# 2 3 _ 0 _ #
# _ _ _ o _ #
# o 0 o 0 _ #
# _ _ _ _ _ #
#############

al (Wild):
#############
# _ _ _ _ _ #
# _ _ _ _ _ #
# _ _ _ _ _ #
# _ _ _ _ _ #
# _ _ _ _ _ #
#############

bl (Wild):
#############
# _ _ _ _ _ #
# _ _ _ _ _ #
# _ _ _ _ _ #
# _ _ _ _ _ #
# _ _ _ _ _ #
#############

am (Wild):
#############
# _ _ _ _ _ #
# _ _ _ _ _ #
# _ _ _ _ _ #
# _ o o o _ #
# _ o ! o _ #
#############

bm (Wild):
#############
# _ o ! o _ #
# _ o o o _ #
# _ _ _ _ _ #
# _ _ _ _ _ #
# _ _ _ _ _ #
#############

an (Wild):
#############
# 2 _ 5 5 9 #
# _ o o o _ #
# 7 o 0 4 _ #
# 7 o 1 o o #
# 9 _ _ o o #
#############

bn (Wild):
#############
# _ _ _ o o #
# _ o _ o o #
# _ o _ _ _ #
# _ o o o _ #
# _ _ _ _ _ #
#############

cc (Wild):
#############
# _ _ _ _ _ #
# _ _ _ _ _ #
# _ _ _ _ _ #
# _ _ _ _ _ #
# _ _ _ _ _ #
#############

dd (Wild):
#############
# _ _ _ _ _ #
# _ _ _ _ _ #
# _ _ _ _ _ #
# _ _ _ _ _ #
# _ _ _ _ _ #
#############

ee (Wild):
#############
# _ _ _ _ _ #
# _ _ _ _ _ #
# _ _ _ _ _ #
# _ _ _ _ _ #
# _ _ _ _ _ #
#############
//b *antiEntangle

[Hallways]
11 (locked; ; )
20 (closed; one way North; )
21 (closed; one way South; )
//71 (closed; ; entangled [72])
//72 (closed; ; entangled [71])
//73 (closed; ; entangled [74])
//74 (closed; ; entangled [73])


[StateVector Pools]
custom
*base00 [ {num_qubits=2: gI @ q0} ]
*base01 [ {num_qubits=2: gX @ q0} ]
*base10 [ {num_qubits=2: gX @ q1} ]
*base11 [ {num_qubits=2: gX @ q0, gX @ q1} ]

*reach1X [ *base01, *base10 ]
*reach2X [ *reach1X, *base11 ]

*supH0 [ {num_qubits=2: gH @ q0} ]
*supH1 [ {num_qubits=2: gH @ q1} ]
*supH [ *supH0, *supH1 ]

*supH0X1 [ {num_qubits=2: gH @ q0, gX @ q1} ]
*supH1X0 [ {num_qubits=2: gH @ q1, gX @ q0} ]

*supHX [ *supH0X1, *supH1X0 ]

*allGates [ *reach2X, *supH, *supHX ]	// all combinations without entanglement

*entanglement0 [ {num_qubits=2: gH @q0, gCX @[q0, q1]} ]
*entanglement1 [ {num_qubits=2: gH @q1, gCX @[q1, q0]} ]
*entanglement [ *entanglement0, *entanglement1 ]

default *allGates

[Reward Pools]
default *none


[Messages]
// highlight text by encapsulating it in "//02abcd//" where "abcd" is the text to highlight and "02" one of the available styles: 01 is for tiles, 02 is for game objects, 03 for actions, 04 for keys on the keyboard and 05 for other words
// speaker: 0 = Examiner, 1 = Scientist, 2 = System, 3 = Player
default Speaker "0"

*entanglement0 prio "You already know that the CX Gate only changes the state if its control (first qubit) is 1. But with the H Gate we can create a state that is both 0 and 1 so what do you think happens if we input such a state as control?"

*entanglement1 prio "As you saw, using a non-classical state as control //05entangles// the //02Qubits//. This way they will always collapse to the same value - either both are 0 or both are 1. Just like same digits to in a room." "But entanglement can also work the other way around. Let's build a circuit where q0 and q1 always output different values, e.g., when one collapses to 0 the other must collapse 1."

*doneMsg prio "todo"

>Qrogue

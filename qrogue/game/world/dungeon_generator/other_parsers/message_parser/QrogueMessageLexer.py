# Generated from D:/Documents/pycharm_workspace/Qrogue/qrogue/game/world/dungeon_generator/other_parsers\QrogueMessage.g4 by ANTLR 4.10.1
# encoding: utf-8
from __future__ import print_function
from antlr4 import *
from io import StringIO
import sys


def serializedATN():
    return [
        4,0,35,336,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,
        1,1,1,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,
        4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,
        5,1,5,1,5,3,5,117,8,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,
        6,1,6,1,6,1,6,3,6,133,8,6,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,
        7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,3,7,159,
        8,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,
        1,8,1,8,1,8,3,8,179,8,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,10,
        1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,11,
        1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,14,
        1,14,1,15,1,15,1,16,1,16,1,17,1,17,1,17,1,18,1,18,1,18,1,19,1,19,
        1,20,1,20,1,20,4,20,233,8,20,11,20,12,20,234,1,21,3,21,238,8,21,
        1,21,1,21,4,21,242,8,21,11,21,12,21,243,1,22,5,22,247,8,22,10,22,
        12,22,250,9,22,1,22,3,22,253,8,22,1,22,1,22,1,23,1,23,1,24,1,24,
        1,25,1,25,1,26,1,26,3,26,265,8,26,1,27,1,27,5,27,269,8,27,10,27,
        12,27,272,9,27,1,27,1,27,1,28,1,28,3,28,278,8,28,1,28,1,28,1,29,
        1,29,1,29,1,29,3,29,286,8,29,1,29,3,29,289,8,29,1,30,1,30,1,30,4,
        30,294,8,30,11,30,12,30,295,1,31,4,31,299,8,31,11,31,12,31,300,1,
        31,1,31,1,32,4,32,306,8,32,11,32,12,32,307,1,32,1,32,1,33,1,33,1,
        33,1,33,5,33,316,8,33,10,33,12,33,319,9,33,1,33,1,33,1,33,1,33,1,
        33,1,34,1,34,1,34,1,34,5,34,330,8,34,10,34,12,34,333,9,34,1,34,1,
        34,2,270,317,0,35,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,
        21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,
        43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,
        65,33,67,34,69,35,1,0,6,1,0,48,57,2,0,43,43,45,45,1,0,97,122,1,0,
        65,90,3,0,9,10,13,13,32,32,2,0,10,10,13,13,359,0,1,1,0,0,0,0,3,1,
        0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,
        0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,
        0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,
        0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,
        0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,
        0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,
        0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,1,71,1,0,0,0,3,79,1,0,
        0,0,5,83,1,0,0,0,7,85,1,0,0,0,9,96,1,0,0,0,11,116,1,0,0,0,13,132,
        1,0,0,0,15,158,1,0,0,0,17,178,1,0,0,0,19,180,1,0,0,0,21,189,1,0,
        0,0,23,197,1,0,0,0,25,205,1,0,0,0,27,213,1,0,0,0,29,215,1,0,0,0,
        31,217,1,0,0,0,33,219,1,0,0,0,35,221,1,0,0,0,37,224,1,0,0,0,39,227,
        1,0,0,0,41,229,1,0,0,0,43,237,1,0,0,0,45,252,1,0,0,0,47,256,1,0,
        0,0,49,258,1,0,0,0,51,260,1,0,0,0,53,264,1,0,0,0,55,266,1,0,0,0,
        57,277,1,0,0,0,59,288,1,0,0,0,61,290,1,0,0,0,63,298,1,0,0,0,65,305,
        1,0,0,0,67,311,1,0,0,0,69,325,1,0,0,0,71,72,5,100,0,0,72,73,5,101,
        0,0,73,74,5,102,0,0,74,75,5,97,0,0,75,76,5,117,0,0,76,77,5,108,0,
        0,77,78,5,116,0,0,78,2,1,0,0,0,79,80,5,112,0,0,80,81,5,111,0,0,81,
        82,5,115,0,0,82,4,1,0,0,0,83,84,5,61,0,0,84,6,1,0,0,0,85,86,5,91,
        0,0,86,87,5,77,0,0,87,88,5,101,0,0,88,89,5,115,0,0,89,90,5,115,0,
        0,90,91,5,97,0,0,91,92,5,103,0,0,92,93,5,101,0,0,93,94,5,115,0,0,
        94,95,5,93,0,0,95,8,1,0,0,0,96,97,5,119,0,0,97,98,5,104,0,0,98,99,
        5,101,0,0,99,100,5,110,0,0,100,10,1,0,0,0,101,102,5,97,0,0,102,103,
        5,108,0,0,103,104,5,116,0,0,104,105,5,101,0,0,105,106,5,114,0,0,
        106,107,5,110,0,0,107,108,5,97,0,0,108,109,5,116,0,0,109,110,5,105,
        0,0,110,111,5,118,0,0,111,117,5,101,0,0,112,113,5,116,0,0,113,114,
        5,104,0,0,114,115,5,101,0,0,115,117,5,110,0,0,116,101,1,0,0,0,116,
        112,1,0,0,0,117,12,1,0,0,0,118,119,5,115,0,0,119,120,5,112,0,0,120,
        121,5,101,0,0,121,122,5,97,0,0,122,123,5,107,0,0,123,124,5,101,0,
        0,124,133,5,114,0,0,125,126,5,83,0,0,126,127,5,112,0,0,127,128,5,
        101,0,0,128,129,5,97,0,0,129,130,5,107,0,0,130,131,5,101,0,0,131,
        133,5,114,0,0,132,118,1,0,0,0,132,125,1,0,0,0,133,14,1,0,0,0,134,
        135,5,112,0,0,135,136,5,114,0,0,136,137,5,105,0,0,137,159,5,111,
        0,0,138,139,5,112,0,0,139,140,5,114,0,0,140,141,5,105,0,0,141,142,
        5,111,0,0,142,143,5,114,0,0,143,144,5,105,0,0,144,145,5,116,0,0,
        145,159,5,121,0,0,146,147,5,80,0,0,147,148,5,114,0,0,148,149,5,105,
        0,0,149,159,5,111,0,0,150,151,5,80,0,0,151,152,5,114,0,0,152,153,
        5,105,0,0,153,154,5,111,0,0,154,155,5,114,0,0,155,156,5,105,0,0,
        156,157,5,116,0,0,157,159,5,121,0,0,158,134,1,0,0,0,158,138,1,0,
        0,0,158,146,1,0,0,0,158,150,1,0,0,0,159,16,1,0,0,0,160,161,5,78,
        0,0,161,162,5,111,0,0,162,163,5,114,0,0,163,164,5,116,0,0,164,179,
        5,104,0,0,165,166,5,69,0,0,166,167,5,97,0,0,167,168,5,115,0,0,168,
        179,5,116,0,0,169,170,5,83,0,0,170,171,5,111,0,0,171,172,5,117,0,
        0,172,173,5,116,0,0,173,179,5,104,0,0,174,175,5,87,0,0,175,176,5,
        101,0,0,176,177,5,115,0,0,177,179,5,116,0,0,178,160,1,0,0,0,178,
        165,1,0,0,0,178,169,1,0,0,0,178,174,1,0,0,0,179,18,1,0,0,0,180,181,
        5,116,0,0,181,182,5,117,0,0,182,183,5,116,0,0,183,184,5,111,0,0,
        184,185,5,114,0,0,185,186,5,105,0,0,186,187,5,97,0,0,187,188,5,108,
        0,0,188,20,1,0,0,0,189,190,5,116,0,0,190,191,5,114,0,0,191,192,5,
        105,0,0,192,193,5,103,0,0,193,194,5,103,0,0,194,195,5,101,0,0,195,
        196,5,114,0,0,196,22,1,0,0,0,197,198,5,81,0,0,198,199,5,114,0,0,
        199,200,5,111,0,0,200,201,5,103,0,0,201,202,5,117,0,0,202,203,5,
        101,0,0,203,204,5,60,0,0,204,24,1,0,0,0,205,206,5,62,0,0,206,207,
        5,81,0,0,207,208,5,114,0,0,208,209,5,111,0,0,209,210,5,103,0,0,210,
        211,5,117,0,0,211,212,5,101,0,0,212,26,1,0,0,0,213,214,5,126,0,0,
        214,28,1,0,0,0,215,216,5,124,0,0,216,30,1,0,0,0,217,218,5,44,0,0,
        218,32,1,0,0,0,219,220,5,35,0,0,220,34,1,0,0,0,221,222,5,46,0,0,
        222,223,5,46,0,0,223,36,1,0,0,0,224,225,5,95,0,0,225,226,5,95,0,
        0,226,38,1,0,0,0,227,228,7,0,0,0,228,40,1,0,0,0,229,230,3,39,19,
        0,230,232,3,39,19,0,231,233,3,39,19,0,232,231,1,0,0,0,233,234,1,
        0,0,0,234,232,1,0,0,0,234,235,1,0,0,0,235,42,1,0,0,0,236,238,3,39,
        19,0,237,236,1,0,0,0,237,238,1,0,0,0,238,239,1,0,0,0,239,241,5,46,
        0,0,240,242,3,39,19,0,241,240,1,0,0,0,242,243,1,0,0,0,243,241,1,
        0,0,0,243,244,1,0,0,0,244,44,1,0,0,0,245,247,3,39,19,0,246,245,1,
        0,0,0,247,250,1,0,0,0,248,246,1,0,0,0,248,249,1,0,0,0,249,253,1,
        0,0,0,250,248,1,0,0,0,251,253,3,43,21,0,252,248,1,0,0,0,252,251,
        1,0,0,0,253,254,1,0,0,0,254,255,5,106,0,0,255,46,1,0,0,0,256,257,
        7,1,0,0,257,48,1,0,0,0,258,259,7,2,0,0,259,50,1,0,0,0,260,261,7,
        3,0,0,261,52,1,0,0,0,262,265,3,49,24,0,263,265,3,51,25,0,264,262,
        1,0,0,0,264,263,1,0,0,0,265,54,1,0,0,0,266,270,5,34,0,0,267,269,
        9,0,0,0,268,267,1,0,0,0,269,272,1,0,0,0,270,271,1,0,0,0,270,268,
        1,0,0,0,271,273,1,0,0,0,272,270,1,0,0,0,273,274,5,34,0,0,274,56,
        1,0,0,0,275,278,5,95,0,0,276,278,3,53,26,0,277,275,1,0,0,0,277,276,
        1,0,0,0,278,279,1,0,0,0,279,280,3,53,26,0,280,58,1,0,0,0,281,282,
        5,61,0,0,282,289,5,61,0,0,283,286,5,95,0,0,284,286,3,39,19,0,285,
        283,1,0,0,0,285,284,1,0,0,0,286,287,1,0,0,0,287,289,3,39,19,0,288,
        281,1,0,0,0,288,285,1,0,0,0,289,60,1,0,0,0,290,293,5,42,0,0,291,
        294,3,53,26,0,292,294,3,39,19,0,293,291,1,0,0,0,293,292,1,0,0,0,
        294,295,1,0,0,0,295,293,1,0,0,0,295,296,1,0,0,0,296,62,1,0,0,0,297,
        299,7,4,0,0,298,297,1,0,0,0,299,300,1,0,0,0,300,298,1,0,0,0,300,
        301,1,0,0,0,301,302,1,0,0,0,302,303,6,31,0,0,303,64,1,0,0,0,304,
        306,5,59,0,0,305,304,1,0,0,0,306,307,1,0,0,0,307,305,1,0,0,0,307,
        308,1,0,0,0,308,309,1,0,0,0,309,310,6,32,0,0,310,66,1,0,0,0,311,
        312,5,47,0,0,312,313,5,42,0,0,313,317,1,0,0,0,314,316,9,0,0,0,315,
        314,1,0,0,0,316,319,1,0,0,0,317,318,1,0,0,0,317,315,1,0,0,0,318,
        320,1,0,0,0,319,317,1,0,0,0,320,321,5,42,0,0,321,322,5,47,0,0,322,
        323,1,0,0,0,323,324,6,33,0,0,324,68,1,0,0,0,325,326,5,47,0,0,326,
        327,5,47,0,0,327,331,1,0,0,0,328,330,8,5,0,0,329,328,1,0,0,0,330,
        333,1,0,0,0,331,329,1,0,0,0,331,332,1,0,0,0,332,334,1,0,0,0,333,
        331,1,0,0,0,334,335,6,34,0,0,335,70,1,0,0,0,21,0,116,132,158,178,
        234,237,243,248,252,264,270,277,285,288,293,295,300,307,317,331,
        1,6,0,0
    ]

class QrogueMessageLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    MESSAGES = 4
    MSG_EVENT = 5
    MSG_ALTERNATIVE = 6
    MSG_SPEAKER = 7
    MSG_PRIORITY = 8
    DIRECTION = 9
    TUTORIAL_LITERAL = 10
    TRIGGER_LITERAL = 11
    HEADER = 12
    ENDER = 13
    HORIZONTAL_SEPARATOR = 14
    VERTICAL_SEPARATOR = 15
    LIST_SEPARATOR = 16
    WALL = 17
    EMPTY_HALLWAY = 18
    EMPTY_ROOM = 19
    DIGIT = 20
    INTEGER = 21
    FLOAT = 22
    IMAG_NUMBER = 23
    SIGN = 24
    CHARACTER_LOW = 25
    CHARACTER_UP = 26
    CHARACTER = 27
    TEXT = 28
    ROOM_ID = 29
    HALLWAY_ID = 30
    REFERENCE = 31
    WS = 32
    UNIVERSAL_SEPARATOR = 33
    COMMENT = 34
    LINE_COMMENT = 35

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ u"DEFAULT_MODE" ]

    literalNames = [ u"<INVALID>",
            u"'default'", u"'pos'", u"'='", u"'[Messages]'", u"'when'", 
            u"'tutorial'", u"'trigger'", u"'Qrogue<'", u"'>Qrogue'", u"'~'", 
            u"'|'", u"','", u"'#'", u"'..'", u"'__'" ]

    symbolicNames = [ u"<INVALID>",
            u"MESSAGES", u"MSG_EVENT", u"MSG_ALTERNATIVE", u"MSG_SPEAKER", 
            u"MSG_PRIORITY", u"DIRECTION", u"TUTORIAL_LITERAL", u"TRIGGER_LITERAL", 
            u"HEADER", u"ENDER", u"HORIZONTAL_SEPARATOR", u"VERTICAL_SEPARATOR", 
            u"LIST_SEPARATOR", u"WALL", u"EMPTY_HALLWAY", u"EMPTY_ROOM", 
            u"DIGIT", u"INTEGER", u"FLOAT", u"IMAG_NUMBER", u"SIGN", u"CHARACTER_LOW", 
            u"CHARACTER_UP", u"CHARACTER", u"TEXT", u"ROOM_ID", u"HALLWAY_ID", 
            u"REFERENCE", u"WS", u"UNIVERSAL_SEPARATOR", u"COMMENT", u"LINE_COMMENT" ]

    ruleNames = [ u"T__0", u"T__1", u"T__2", u"MESSAGES", u"MSG_EVENT", 
                  u"MSG_ALTERNATIVE", u"MSG_SPEAKER", u"MSG_PRIORITY", u"DIRECTION", 
                  u"TUTORIAL_LITERAL", u"TRIGGER_LITERAL", u"HEADER", u"ENDER", 
                  u"HORIZONTAL_SEPARATOR", u"VERTICAL_SEPARATOR", u"LIST_SEPARATOR", 
                  u"WALL", u"EMPTY_HALLWAY", u"EMPTY_ROOM", u"DIGIT", u"INTEGER", 
                  u"FLOAT", u"IMAG_NUMBER", u"SIGN", u"CHARACTER_LOW", u"CHARACTER_UP", 
                  u"CHARACTER", u"TEXT", u"ROOM_ID", u"HALLWAY_ID", u"REFERENCE", 
                  u"WS", u"UNIVERSAL_SEPARATOR", u"COMMENT", u"LINE_COMMENT" ]

    grammarFileName = u"QrogueMessage.g4"

    def __init__(self, input=None, output=sys.stdout):
        super(QrogueMessageLexer, self).__init__(input, output=output)
        self.checkVersion("4.10.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None



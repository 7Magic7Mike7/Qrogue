# Generated from D:/Documents/pycharm_workspace/Qrogue/qrogue/game/world/dungeon_generator/other_parsers\QrogueMessage.g4 by ANTLR 4.10.1
# encoding: utf-8
from __future__ import print_function
from antlr4 import *
from io import StringIO
import sys


def serializedATN():
    return [
        4,0,29,267,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,
        1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
        1,2,1,2,1,2,1,2,1,2,1,2,3,2,91,8,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,
        3,1,3,1,3,1,3,1,3,1,3,1,3,3,3,107,8,3,1,4,1,4,1,4,1,4,1,4,1,4,1,
        4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,3,4,127,8,4,1,5,1,
        5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,
        7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,11,1,12,1,12,1,12,1,13,1,
        13,1,14,1,14,1,14,4,14,164,8,14,11,14,12,14,165,1,15,3,15,169,8,
        15,1,15,1,15,4,15,173,8,15,11,15,12,15,174,1,16,5,16,178,8,16,10,
        16,12,16,181,9,16,1,16,3,16,184,8,16,1,16,1,16,1,17,1,17,1,18,1,
        18,1,19,1,19,1,20,1,20,3,20,196,8,20,1,21,1,21,5,21,200,8,21,10,
        21,12,21,203,9,21,1,21,1,21,1,22,1,22,3,22,209,8,22,1,22,1,22,1,
        23,1,23,1,23,1,23,3,23,217,8,23,1,23,3,23,220,8,23,1,24,1,24,1,24,
        4,24,225,8,24,11,24,12,24,226,1,25,4,25,230,8,25,11,25,12,25,231,
        1,25,1,25,1,26,4,26,237,8,26,11,26,12,26,238,1,26,1,26,1,27,1,27,
        1,27,1,27,5,27,247,8,27,10,27,12,27,250,9,27,1,27,1,27,1,27,1,27,
        1,27,1,28,1,28,1,28,1,28,5,28,261,8,28,10,28,12,28,264,9,28,1,28,
        1,28,2,201,248,0,29,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,
        21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,
        43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,1,0,6,1,0,48,57,
        2,0,43,43,45,45,1,0,97,122,1,0,65,90,3,0,9,10,13,13,32,32,2,0,10,
        10,13,13,287,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,
        1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,
        1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,
        1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,
        1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,
        1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,1,59,
        1,0,0,0,3,70,1,0,0,0,5,90,1,0,0,0,7,106,1,0,0,0,9,126,1,0,0,0,11,
        128,1,0,0,0,13,136,1,0,0,0,15,144,1,0,0,0,17,146,1,0,0,0,19,148,
        1,0,0,0,21,150,1,0,0,0,23,152,1,0,0,0,25,155,1,0,0,0,27,158,1,0,
        0,0,29,160,1,0,0,0,31,168,1,0,0,0,33,183,1,0,0,0,35,187,1,0,0,0,
        37,189,1,0,0,0,39,191,1,0,0,0,41,195,1,0,0,0,43,197,1,0,0,0,45,208,
        1,0,0,0,47,219,1,0,0,0,49,221,1,0,0,0,51,229,1,0,0,0,53,236,1,0,
        0,0,55,242,1,0,0,0,57,256,1,0,0,0,59,60,5,91,0,0,60,61,5,77,0,0,
        61,62,5,101,0,0,62,63,5,115,0,0,63,64,5,115,0,0,64,65,5,97,0,0,65,
        66,5,103,0,0,66,67,5,101,0,0,67,68,5,115,0,0,68,69,5,93,0,0,69,2,
        1,0,0,0,70,71,5,119,0,0,71,72,5,104,0,0,72,73,5,101,0,0,73,74,5,
        110,0,0,74,4,1,0,0,0,75,76,5,97,0,0,76,77,5,108,0,0,77,78,5,116,
        0,0,78,79,5,101,0,0,79,80,5,114,0,0,80,81,5,110,0,0,81,82,5,97,0,
        0,82,83,5,116,0,0,83,84,5,105,0,0,84,85,5,118,0,0,85,91,5,101,0,
        0,86,87,5,116,0,0,87,88,5,104,0,0,88,89,5,101,0,0,89,91,5,110,0,
        0,90,75,1,0,0,0,90,86,1,0,0,0,91,6,1,0,0,0,92,93,5,115,0,0,93,94,
        5,112,0,0,94,95,5,101,0,0,95,96,5,97,0,0,96,97,5,107,0,0,97,98,5,
        101,0,0,98,107,5,114,0,0,99,100,5,83,0,0,100,101,5,112,0,0,101,102,
        5,101,0,0,102,103,5,97,0,0,103,104,5,107,0,0,104,105,5,101,0,0,105,
        107,5,114,0,0,106,92,1,0,0,0,106,99,1,0,0,0,107,8,1,0,0,0,108,109,
        5,78,0,0,109,110,5,111,0,0,110,111,5,114,0,0,111,112,5,116,0,0,112,
        127,5,104,0,0,113,114,5,69,0,0,114,115,5,97,0,0,115,116,5,115,0,
        0,116,127,5,116,0,0,117,118,5,83,0,0,118,119,5,111,0,0,119,120,5,
        117,0,0,120,121,5,116,0,0,121,127,5,104,0,0,122,123,5,87,0,0,123,
        124,5,101,0,0,124,125,5,115,0,0,125,127,5,116,0,0,126,108,1,0,0,
        0,126,113,1,0,0,0,126,117,1,0,0,0,126,122,1,0,0,0,127,10,1,0,0,0,
        128,129,5,81,0,0,129,130,5,114,0,0,130,131,5,111,0,0,131,132,5,103,
        0,0,132,133,5,117,0,0,133,134,5,101,0,0,134,135,5,60,0,0,135,12,
        1,0,0,0,136,137,5,62,0,0,137,138,5,81,0,0,138,139,5,114,0,0,139,
        140,5,111,0,0,140,141,5,103,0,0,141,142,5,117,0,0,142,143,5,101,
        0,0,143,14,1,0,0,0,144,145,5,126,0,0,145,16,1,0,0,0,146,147,5,124,
        0,0,147,18,1,0,0,0,148,149,5,44,0,0,149,20,1,0,0,0,150,151,5,35,
        0,0,151,22,1,0,0,0,152,153,5,46,0,0,153,154,5,46,0,0,154,24,1,0,
        0,0,155,156,5,95,0,0,156,157,5,95,0,0,157,26,1,0,0,0,158,159,7,0,
        0,0,159,28,1,0,0,0,160,161,3,27,13,0,161,163,3,27,13,0,162,164,3,
        27,13,0,163,162,1,0,0,0,164,165,1,0,0,0,165,163,1,0,0,0,165,166,
        1,0,0,0,166,30,1,0,0,0,167,169,3,27,13,0,168,167,1,0,0,0,168,169,
        1,0,0,0,169,170,1,0,0,0,170,172,5,46,0,0,171,173,3,27,13,0,172,171,
        1,0,0,0,173,174,1,0,0,0,174,172,1,0,0,0,174,175,1,0,0,0,175,32,1,
        0,0,0,176,178,3,27,13,0,177,176,1,0,0,0,178,181,1,0,0,0,179,177,
        1,0,0,0,179,180,1,0,0,0,180,184,1,0,0,0,181,179,1,0,0,0,182,184,
        3,31,15,0,183,179,1,0,0,0,183,182,1,0,0,0,184,185,1,0,0,0,185,186,
        5,106,0,0,186,34,1,0,0,0,187,188,7,1,0,0,188,36,1,0,0,0,189,190,
        7,2,0,0,190,38,1,0,0,0,191,192,7,3,0,0,192,40,1,0,0,0,193,196,3,
        37,18,0,194,196,3,39,19,0,195,193,1,0,0,0,195,194,1,0,0,0,196,42,
        1,0,0,0,197,201,5,34,0,0,198,200,9,0,0,0,199,198,1,0,0,0,200,203,
        1,0,0,0,201,202,1,0,0,0,201,199,1,0,0,0,202,204,1,0,0,0,203,201,
        1,0,0,0,204,205,5,34,0,0,205,44,1,0,0,0,206,209,5,95,0,0,207,209,
        3,41,20,0,208,206,1,0,0,0,208,207,1,0,0,0,209,210,1,0,0,0,210,211,
        3,41,20,0,211,46,1,0,0,0,212,213,5,61,0,0,213,220,5,61,0,0,214,217,
        5,95,0,0,215,217,3,27,13,0,216,214,1,0,0,0,216,215,1,0,0,0,217,218,
        1,0,0,0,218,220,3,27,13,0,219,212,1,0,0,0,219,216,1,0,0,0,220,48,
        1,0,0,0,221,224,5,42,0,0,222,225,3,41,20,0,223,225,3,27,13,0,224,
        222,1,0,0,0,224,223,1,0,0,0,225,226,1,0,0,0,226,224,1,0,0,0,226,
        227,1,0,0,0,227,50,1,0,0,0,228,230,7,4,0,0,229,228,1,0,0,0,230,231,
        1,0,0,0,231,229,1,0,0,0,231,232,1,0,0,0,232,233,1,0,0,0,233,234,
        6,25,0,0,234,52,1,0,0,0,235,237,5,59,0,0,236,235,1,0,0,0,237,238,
        1,0,0,0,238,236,1,0,0,0,238,239,1,0,0,0,239,240,1,0,0,0,240,241,
        6,26,0,0,241,54,1,0,0,0,242,243,5,47,0,0,243,244,5,42,0,0,244,248,
        1,0,0,0,245,247,9,0,0,0,246,245,1,0,0,0,247,250,1,0,0,0,248,249,
        1,0,0,0,248,246,1,0,0,0,249,251,1,0,0,0,250,248,1,0,0,0,251,252,
        5,42,0,0,252,253,5,47,0,0,253,254,1,0,0,0,254,255,6,27,0,0,255,56,
        1,0,0,0,256,257,5,47,0,0,257,258,5,47,0,0,258,262,1,0,0,0,259,261,
        8,5,0,0,260,259,1,0,0,0,261,264,1,0,0,0,262,260,1,0,0,0,262,263,
        1,0,0,0,263,265,1,0,0,0,264,262,1,0,0,0,265,266,6,28,0,0,266,58,
        1,0,0,0,20,0,90,106,126,165,168,174,179,183,195,201,208,216,219,
        224,226,231,238,248,262,1,6,0,0
    ]

class QrogueMessageLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    MESSAGES = 1
    MSG_EVENT = 2
    MSG_ALTERNATIVE = 3
    MSG_SPEAKER = 4
    DIRECTION = 5
    HEADER = 6
    ENDER = 7
    HORIZONTAL_SEPARATOR = 8
    VERTICAL_SEPARATOR = 9
    LIST_SEPARATOR = 10
    WALL = 11
    EMPTY_HALLWAY = 12
    EMPTY_ROOM = 13
    DIGIT = 14
    INTEGER = 15
    FLOAT = 16
    IMAG_NUMBER = 17
    SIGN = 18
    CHARACTER_LOW = 19
    CHARACTER_UP = 20
    CHARACTER = 21
    TEXT = 22
    ROOM_ID = 23
    HALLWAY_ID = 24
    REFERENCE = 25
    WS = 26
    UNIVERSAL_SEPARATOR = 27
    COMMENT = 28
    LINE_COMMENT = 29

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ u"DEFAULT_MODE" ]

    literalNames = [ u"<INVALID>",
            u"'[Messages]'", u"'when'", u"'Qrogue<'", u"'>Qrogue'", u"'~'", 
            u"'|'", u"','", u"'#'", u"'..'", u"'__'" ]

    symbolicNames = [ u"<INVALID>",
            u"MESSAGES", u"MSG_EVENT", u"MSG_ALTERNATIVE", u"MSG_SPEAKER", 
            u"DIRECTION", u"HEADER", u"ENDER", u"HORIZONTAL_SEPARATOR", 
            u"VERTICAL_SEPARATOR", u"LIST_SEPARATOR", u"WALL", u"EMPTY_HALLWAY", 
            u"EMPTY_ROOM", u"DIGIT", u"INTEGER", u"FLOAT", u"IMAG_NUMBER", 
            u"SIGN", u"CHARACTER_LOW", u"CHARACTER_UP", u"CHARACTER", u"TEXT", 
            u"ROOM_ID", u"HALLWAY_ID", u"REFERENCE", u"WS", u"UNIVERSAL_SEPARATOR", 
            u"COMMENT", u"LINE_COMMENT" ]

    ruleNames = [ u"MESSAGES", u"MSG_EVENT", u"MSG_ALTERNATIVE", u"MSG_SPEAKER", 
                  u"DIRECTION", u"HEADER", u"ENDER", u"HORIZONTAL_SEPARATOR", 
                  u"VERTICAL_SEPARATOR", u"LIST_SEPARATOR", u"WALL", u"EMPTY_HALLWAY", 
                  u"EMPTY_ROOM", u"DIGIT", u"INTEGER", u"FLOAT", u"IMAG_NUMBER", 
                  u"SIGN", u"CHARACTER_LOW", u"CHARACTER_UP", u"CHARACTER", 
                  u"TEXT", u"ROOM_ID", u"HALLWAY_ID", u"REFERENCE", u"WS", 
                  u"UNIVERSAL_SEPARATOR", u"COMMENT", u"LINE_COMMENT" ]

    grammarFileName = u"QrogueMessage.g4"

    def __init__(self, input=None, output=sys.stdout):
        super(QrogueMessageLexer, self).__init__(input, output=output)
        self.checkVersion("4.10.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None



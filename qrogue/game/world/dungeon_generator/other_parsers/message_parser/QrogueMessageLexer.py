# Generated from D:/Documents/pycharm_workspace/Qrogue/qrogue/game/world/dungeon_generator/other_parsers\QrogueMessage.g4 by ANTLR 4.10.1
# encoding: utf-8
from __future__ import print_function
from antlr4 import *
from io import StringIO
import sys


def serializedATN():
    return [
        4,0,33,326,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,
        3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,3,3,107,8,3,1,4,1,4,1,4,1,4,1,4,1,
        4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,3,4,123,8,4,1,5,1,5,1,5,1,5,1,
        5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,
        5,1,5,1,5,1,5,3,5,149,8,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,
        6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,3,6,169,8,6,1,7,1,7,1,7,1,7,1,
        7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,
        9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,
        11,1,12,1,12,1,13,1,13,1,14,1,14,1,15,1,15,1,15,1,16,1,16,1,16,1,
        17,1,17,1,18,1,18,1,18,4,18,223,8,18,11,18,12,18,224,1,19,3,19,228,
        8,19,1,19,1,19,4,19,232,8,19,11,19,12,19,233,1,20,5,20,237,8,20,
        10,20,12,20,240,9,20,1,20,3,20,243,8,20,1,20,1,20,1,21,1,21,1,22,
        1,22,1,23,1,23,1,24,1,24,3,24,255,8,24,1,25,1,25,5,25,259,8,25,10,
        25,12,25,262,9,25,1,25,1,25,1,26,1,26,3,26,268,8,26,1,26,1,26,1,
        27,1,27,1,27,1,27,3,27,276,8,27,1,27,3,27,279,8,27,1,28,1,28,1,28,
        4,28,284,8,28,11,28,12,28,285,1,29,4,29,289,8,29,11,29,12,29,290,
        1,29,1,29,1,30,4,30,296,8,30,11,30,12,30,297,1,30,1,30,1,31,1,31,
        1,31,1,31,5,31,306,8,31,10,31,12,31,309,9,31,1,31,1,31,1,31,1,31,
        1,31,1,32,1,32,1,32,1,32,5,32,320,8,32,10,32,12,32,323,9,32,1,32,
        1,32,2,260,307,0,33,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,
        21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,
        43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,
        65,33,1,0,6,1,0,48,57,2,0,43,43,45,45,1,0,97,122,1,0,65,90,3,0,9,
        10,13,13,32,32,2,0,10,10,13,13,349,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,
        0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,
        0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,
        0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,
        0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,
        0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,
        0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,
        0,0,1,67,1,0,0,0,3,75,1,0,0,0,5,86,1,0,0,0,7,106,1,0,0,0,9,122,1,
        0,0,0,11,148,1,0,0,0,13,168,1,0,0,0,15,170,1,0,0,0,17,179,1,0,0,
        0,19,187,1,0,0,0,21,195,1,0,0,0,23,203,1,0,0,0,25,205,1,0,0,0,27,
        207,1,0,0,0,29,209,1,0,0,0,31,211,1,0,0,0,33,214,1,0,0,0,35,217,
        1,0,0,0,37,219,1,0,0,0,39,227,1,0,0,0,41,242,1,0,0,0,43,246,1,0,
        0,0,45,248,1,0,0,0,47,250,1,0,0,0,49,254,1,0,0,0,51,256,1,0,0,0,
        53,267,1,0,0,0,55,278,1,0,0,0,57,280,1,0,0,0,59,288,1,0,0,0,61,295,
        1,0,0,0,63,301,1,0,0,0,65,315,1,0,0,0,67,68,5,100,0,0,68,69,5,101,
        0,0,69,70,5,102,0,0,70,71,5,97,0,0,71,72,5,117,0,0,72,73,5,108,0,
        0,73,74,5,116,0,0,74,2,1,0,0,0,75,76,5,91,0,0,76,77,5,77,0,0,77,
        78,5,101,0,0,78,79,5,115,0,0,79,80,5,115,0,0,80,81,5,97,0,0,81,82,
        5,103,0,0,82,83,5,101,0,0,83,84,5,115,0,0,84,85,5,93,0,0,85,4,1,
        0,0,0,86,87,5,119,0,0,87,88,5,104,0,0,88,89,5,101,0,0,89,90,5,110,
        0,0,90,6,1,0,0,0,91,92,5,97,0,0,92,93,5,108,0,0,93,94,5,116,0,0,
        94,95,5,101,0,0,95,96,5,114,0,0,96,97,5,110,0,0,97,98,5,97,0,0,98,
        99,5,116,0,0,99,100,5,105,0,0,100,101,5,118,0,0,101,107,5,101,0,
        0,102,103,5,116,0,0,103,104,5,104,0,0,104,105,5,101,0,0,105,107,
        5,110,0,0,106,91,1,0,0,0,106,102,1,0,0,0,107,8,1,0,0,0,108,109,5,
        115,0,0,109,110,5,112,0,0,110,111,5,101,0,0,111,112,5,97,0,0,112,
        113,5,107,0,0,113,114,5,101,0,0,114,123,5,114,0,0,115,116,5,83,0,
        0,116,117,5,112,0,0,117,118,5,101,0,0,118,119,5,97,0,0,119,120,5,
        107,0,0,120,121,5,101,0,0,121,123,5,114,0,0,122,108,1,0,0,0,122,
        115,1,0,0,0,123,10,1,0,0,0,124,125,5,112,0,0,125,126,5,114,0,0,126,
        127,5,105,0,0,127,149,5,111,0,0,128,129,5,112,0,0,129,130,5,114,
        0,0,130,131,5,105,0,0,131,132,5,111,0,0,132,133,5,114,0,0,133,134,
        5,105,0,0,134,135,5,116,0,0,135,149,5,121,0,0,136,137,5,80,0,0,137,
        138,5,114,0,0,138,139,5,105,0,0,139,149,5,111,0,0,140,141,5,80,0,
        0,141,142,5,114,0,0,142,143,5,105,0,0,143,144,5,111,0,0,144,145,
        5,114,0,0,145,146,5,105,0,0,146,147,5,116,0,0,147,149,5,121,0,0,
        148,124,1,0,0,0,148,128,1,0,0,0,148,136,1,0,0,0,148,140,1,0,0,0,
        149,12,1,0,0,0,150,151,5,78,0,0,151,152,5,111,0,0,152,153,5,114,
        0,0,153,154,5,116,0,0,154,169,5,104,0,0,155,156,5,69,0,0,156,157,
        5,97,0,0,157,158,5,115,0,0,158,169,5,116,0,0,159,160,5,83,0,0,160,
        161,5,111,0,0,161,162,5,117,0,0,162,163,5,116,0,0,163,169,5,104,
        0,0,164,165,5,87,0,0,165,166,5,101,0,0,166,167,5,115,0,0,167,169,
        5,116,0,0,168,150,1,0,0,0,168,155,1,0,0,0,168,159,1,0,0,0,168,164,
        1,0,0,0,169,14,1,0,0,0,170,171,5,116,0,0,171,172,5,117,0,0,172,173,
        5,116,0,0,173,174,5,111,0,0,174,175,5,114,0,0,175,176,5,105,0,0,
        176,177,5,97,0,0,177,178,5,108,0,0,178,16,1,0,0,0,179,180,5,116,
        0,0,180,181,5,114,0,0,181,182,5,105,0,0,182,183,5,103,0,0,183,184,
        5,103,0,0,184,185,5,101,0,0,185,186,5,114,0,0,186,18,1,0,0,0,187,
        188,5,81,0,0,188,189,5,114,0,0,189,190,5,111,0,0,190,191,5,103,0,
        0,191,192,5,117,0,0,192,193,5,101,0,0,193,194,5,60,0,0,194,20,1,
        0,0,0,195,196,5,62,0,0,196,197,5,81,0,0,197,198,5,114,0,0,198,199,
        5,111,0,0,199,200,5,103,0,0,200,201,5,117,0,0,201,202,5,101,0,0,
        202,22,1,0,0,0,203,204,5,126,0,0,204,24,1,0,0,0,205,206,5,124,0,
        0,206,26,1,0,0,0,207,208,5,44,0,0,208,28,1,0,0,0,209,210,5,35,0,
        0,210,30,1,0,0,0,211,212,5,46,0,0,212,213,5,46,0,0,213,32,1,0,0,
        0,214,215,5,95,0,0,215,216,5,95,0,0,216,34,1,0,0,0,217,218,7,0,0,
        0,218,36,1,0,0,0,219,220,3,35,17,0,220,222,3,35,17,0,221,223,3,35,
        17,0,222,221,1,0,0,0,223,224,1,0,0,0,224,222,1,0,0,0,224,225,1,0,
        0,0,225,38,1,0,0,0,226,228,3,35,17,0,227,226,1,0,0,0,227,228,1,0,
        0,0,228,229,1,0,0,0,229,231,5,46,0,0,230,232,3,35,17,0,231,230,1,
        0,0,0,232,233,1,0,0,0,233,231,1,0,0,0,233,234,1,0,0,0,234,40,1,0,
        0,0,235,237,3,35,17,0,236,235,1,0,0,0,237,240,1,0,0,0,238,236,1,
        0,0,0,238,239,1,0,0,0,239,243,1,0,0,0,240,238,1,0,0,0,241,243,3,
        39,19,0,242,238,1,0,0,0,242,241,1,0,0,0,243,244,1,0,0,0,244,245,
        5,106,0,0,245,42,1,0,0,0,246,247,7,1,0,0,247,44,1,0,0,0,248,249,
        7,2,0,0,249,46,1,0,0,0,250,251,7,3,0,0,251,48,1,0,0,0,252,255,3,
        45,22,0,253,255,3,47,23,0,254,252,1,0,0,0,254,253,1,0,0,0,255,50,
        1,0,0,0,256,260,5,34,0,0,257,259,9,0,0,0,258,257,1,0,0,0,259,262,
        1,0,0,0,260,261,1,0,0,0,260,258,1,0,0,0,261,263,1,0,0,0,262,260,
        1,0,0,0,263,264,5,34,0,0,264,52,1,0,0,0,265,268,5,95,0,0,266,268,
        3,49,24,0,267,265,1,0,0,0,267,266,1,0,0,0,268,269,1,0,0,0,269,270,
        3,49,24,0,270,54,1,0,0,0,271,272,5,61,0,0,272,279,5,61,0,0,273,276,
        5,95,0,0,274,276,3,35,17,0,275,273,1,0,0,0,275,274,1,0,0,0,276,277,
        1,0,0,0,277,279,3,35,17,0,278,271,1,0,0,0,278,275,1,0,0,0,279,56,
        1,0,0,0,280,283,5,42,0,0,281,284,3,49,24,0,282,284,3,35,17,0,283,
        281,1,0,0,0,283,282,1,0,0,0,284,285,1,0,0,0,285,283,1,0,0,0,285,
        286,1,0,0,0,286,58,1,0,0,0,287,289,7,4,0,0,288,287,1,0,0,0,289,290,
        1,0,0,0,290,288,1,0,0,0,290,291,1,0,0,0,291,292,1,0,0,0,292,293,
        6,29,0,0,293,60,1,0,0,0,294,296,5,59,0,0,295,294,1,0,0,0,296,297,
        1,0,0,0,297,295,1,0,0,0,297,298,1,0,0,0,298,299,1,0,0,0,299,300,
        6,30,0,0,300,62,1,0,0,0,301,302,5,47,0,0,302,303,5,42,0,0,303,307,
        1,0,0,0,304,306,9,0,0,0,305,304,1,0,0,0,306,309,1,0,0,0,307,308,
        1,0,0,0,307,305,1,0,0,0,308,310,1,0,0,0,309,307,1,0,0,0,310,311,
        5,42,0,0,311,312,5,47,0,0,312,313,1,0,0,0,313,314,6,31,0,0,314,64,
        1,0,0,0,315,316,5,47,0,0,316,317,5,47,0,0,317,321,1,0,0,0,318,320,
        8,5,0,0,319,318,1,0,0,0,320,323,1,0,0,0,321,319,1,0,0,0,321,322,
        1,0,0,0,322,324,1,0,0,0,323,321,1,0,0,0,324,325,6,32,0,0,325,66,
        1,0,0,0,21,0,106,122,148,168,224,227,233,238,242,254,260,267,275,
        278,283,285,290,297,307,321,1,6,0,0
    ]

class QrogueMessageLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    MESSAGES = 2
    MSG_EVENT = 3
    MSG_ALTERNATIVE = 4
    MSG_SPEAKER = 5
    MSG_PRIORITY = 6
    DIRECTION = 7
    TUTORIAL_LITERAL = 8
    TRIGGER_LITERAL = 9
    HEADER = 10
    ENDER = 11
    HORIZONTAL_SEPARATOR = 12
    VERTICAL_SEPARATOR = 13
    LIST_SEPARATOR = 14
    WALL = 15
    EMPTY_HALLWAY = 16
    EMPTY_ROOM = 17
    DIGIT = 18
    INTEGER = 19
    FLOAT = 20
    IMAG_NUMBER = 21
    SIGN = 22
    CHARACTER_LOW = 23
    CHARACTER_UP = 24
    CHARACTER = 25
    TEXT = 26
    ROOM_ID = 27
    HALLWAY_ID = 28
    REFERENCE = 29
    WS = 30
    UNIVERSAL_SEPARATOR = 31
    COMMENT = 32
    LINE_COMMENT = 33

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ u"DEFAULT_MODE" ]

    literalNames = [ u"<INVALID>",
            u"'default'", u"'[Messages]'", u"'when'", u"'tutorial'", u"'trigger'", 
            u"'Qrogue<'", u"'>Qrogue'", u"'~'", u"'|'", u"','", u"'#'", 
            u"'..'", u"'__'" ]

    symbolicNames = [ u"<INVALID>",
            u"MESSAGES", u"MSG_EVENT", u"MSG_ALTERNATIVE", u"MSG_SPEAKER", 
            u"MSG_PRIORITY", u"DIRECTION", u"TUTORIAL_LITERAL", u"TRIGGER_LITERAL", 
            u"HEADER", u"ENDER", u"HORIZONTAL_SEPARATOR", u"VERTICAL_SEPARATOR", 
            u"LIST_SEPARATOR", u"WALL", u"EMPTY_HALLWAY", u"EMPTY_ROOM", 
            u"DIGIT", u"INTEGER", u"FLOAT", u"IMAG_NUMBER", u"SIGN", u"CHARACTER_LOW", 
            u"CHARACTER_UP", u"CHARACTER", u"TEXT", u"ROOM_ID", u"HALLWAY_ID", 
            u"REFERENCE", u"WS", u"UNIVERSAL_SEPARATOR", u"COMMENT", u"LINE_COMMENT" ]

    ruleNames = [ u"T__0", u"MESSAGES", u"MSG_EVENT", u"MSG_ALTERNATIVE", 
                  u"MSG_SPEAKER", u"MSG_PRIORITY", u"DIRECTION", u"TUTORIAL_LITERAL", 
                  u"TRIGGER_LITERAL", u"HEADER", u"ENDER", u"HORIZONTAL_SEPARATOR", 
                  u"VERTICAL_SEPARATOR", u"LIST_SEPARATOR", u"WALL", u"EMPTY_HALLWAY", 
                  u"EMPTY_ROOM", u"DIGIT", u"INTEGER", u"FLOAT", u"IMAG_NUMBER", 
                  u"SIGN", u"CHARACTER_LOW", u"CHARACTER_UP", u"CHARACTER", 
                  u"TEXT", u"ROOM_ID", u"HALLWAY_ID", u"REFERENCE", u"WS", 
                  u"UNIVERSAL_SEPARATOR", u"COMMENT", u"LINE_COMMENT" ]

    grammarFileName = u"QrogueMessage.g4"

    def __init__(self, input=None, output=sys.stdout):
        super(QrogueMessageLexer, self).__init__(input, output=output)
        self.checkVersion("4.10.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None



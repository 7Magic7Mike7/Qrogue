# Generated from D:/Documents/pycharm_workspace/Qrogue/qrogue/game/world/dungeon_generator/other_parsers\QrogueAreas.g4 by ANTLR 4.10.1
# encoding: utf-8
from __future__ import print_function
from antlr4 import *
from io import StringIO
import sys


def serializedATN():
    return [
        4,0,57,534,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,1,0,1,0,1,1,1,1,
        1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,
        1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,
        1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,
        1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,7,
        1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,
        1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,3,8,211,8,8,1,9,1,9,
        1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,
        1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,
        1,12,1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,14,
        1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,17,
        1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,19,
        1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,
        1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,22,
        1,23,1,23,1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,25,1,25,
        1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,27,
        1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,
        1,28,1,28,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,30,
        1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,
        1,30,1,30,1,30,1,30,3,30,377,8,30,1,31,1,31,1,31,1,31,1,31,1,31,
        1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,33,1,33,
        1,33,1,33,1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,34,1,34,1,34,1,34,
        1,34,1,35,1,35,1,36,1,36,1,37,1,37,1,38,1,38,1,39,1,39,1,39,1,40,
        1,40,1,40,1,41,1,41,1,42,1,42,1,42,4,42,431,8,42,11,42,12,42,432,
        1,43,3,43,436,8,43,1,43,1,43,4,43,440,8,43,11,43,12,43,441,1,44,
        5,44,445,8,44,10,44,12,44,448,9,44,1,44,3,44,451,8,44,1,44,1,44,
        1,45,1,45,1,46,1,46,1,47,1,47,1,48,1,48,3,48,463,8,48,1,49,1,49,
        5,49,467,8,49,10,49,12,49,470,9,49,1,49,1,49,1,50,1,50,3,50,476,
        8,50,1,50,1,50,1,51,1,51,1,51,1,51,3,51,484,8,51,1,51,3,51,487,8,
        51,1,52,1,52,1,52,4,52,492,8,52,11,52,12,52,493,1,53,4,53,497,8,
        53,11,53,12,53,498,1,53,1,53,1,54,4,54,504,8,54,11,54,12,54,505,
        1,54,1,54,1,55,1,55,1,55,1,55,5,55,514,8,55,10,55,12,55,517,9,55,
        1,55,1,55,1,55,1,55,1,55,1,56,1,56,1,56,1,56,5,56,528,8,56,10,56,
        12,56,531,9,56,1,56,1,56,2,468,515,0,57,1,1,3,2,5,3,7,4,9,5,11,6,
        13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,
        18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,
        29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,
        40,81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,99,50,101,
        51,103,52,105,53,107,54,109,55,111,56,113,57,1,0,6,1,0,48,57,2,0,
        43,43,45,45,1,0,97,122,1,0,65,90,3,0,9,10,13,13,32,32,2,0,10,10,
        13,13,553,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,
        0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,
        0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,
        0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,
        0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,
        0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,
        0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,
        0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,
        0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,
        0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,
        0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,
        109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,1,115,1,0,0,0,3,117,1,0,
        0,0,5,119,1,0,0,0,7,121,1,0,0,0,9,168,1,0,0,0,11,176,1,0,0,0,13,
        178,1,0,0,0,15,180,1,0,0,0,17,210,1,0,0,0,19,212,1,0,0,0,21,223,
        1,0,0,0,23,231,1,0,0,0,25,237,1,0,0,0,27,243,1,0,0,0,29,249,1,0,
        0,0,31,255,1,0,0,0,33,260,1,0,0,0,35,265,1,0,0,0,37,272,1,0,0,0,
        39,277,1,0,0,0,41,282,1,0,0,0,43,291,1,0,0,0,45,301,1,0,0,0,47,307,
        1,0,0,0,49,313,1,0,0,0,51,318,1,0,0,0,53,325,1,0,0,0,55,332,1,0,
        0,0,57,338,1,0,0,0,59,348,1,0,0,0,61,376,1,0,0,0,63,378,1,0,0,0,
        65,387,1,0,0,0,67,395,1,0,0,0,69,403,1,0,0,0,71,411,1,0,0,0,73,413,
        1,0,0,0,75,415,1,0,0,0,77,417,1,0,0,0,79,419,1,0,0,0,81,422,1,0,
        0,0,83,425,1,0,0,0,85,427,1,0,0,0,87,435,1,0,0,0,89,450,1,0,0,0,
        91,454,1,0,0,0,93,456,1,0,0,0,95,458,1,0,0,0,97,462,1,0,0,0,99,464,
        1,0,0,0,101,475,1,0,0,0,103,486,1,0,0,0,105,488,1,0,0,0,107,496,
        1,0,0,0,109,503,1,0,0,0,111,509,1,0,0,0,113,523,1,0,0,0,115,116,
        5,58,0,0,116,2,1,0,0,0,117,118,5,40,0,0,118,4,1,0,0,0,119,120,5,
        41,0,0,120,6,1,0,0,0,121,122,5,84,0,0,122,123,5,79,0,0,123,124,5,
        68,0,0,124,125,5,79,0,0,125,126,5,58,0,0,126,127,5,32,0,0,127,128,
        5,105,0,0,128,129,5,109,0,0,129,130,5,112,0,0,130,131,5,108,0,0,
        131,132,5,101,0,0,132,133,5,109,0,0,133,134,5,101,0,0,134,135,5,
        110,0,0,135,136,5,116,0,0,136,137,5,32,0,0,137,138,5,105,0,0,138,
        139,5,110,0,0,139,140,5,32,0,0,140,141,5,105,0,0,141,142,5,109,0,
        0,142,143,5,112,0,0,143,144,5,111,0,0,144,145,5,114,0,0,145,146,
        5,116,0,0,146,147,5,105,0,0,147,148,5,110,0,0,148,149,5,103,0,0,
        149,150,5,32,0,0,150,151,5,103,0,0,151,152,5,114,0,0,152,153,5,97,
        0,0,153,154,5,109,0,0,154,155,5,109,0,0,155,156,5,97,0,0,156,157,
        5,114,0,0,157,158,5,32,0,0,158,159,5,35,0,0,159,160,5,111,0,0,160,
        161,5,118,0,0,161,162,5,101,0,0,162,163,5,114,0,0,163,164,5,114,
        0,0,164,165,5,105,0,0,165,166,5,100,0,0,166,167,5,101,0,0,167,8,
        1,0,0,0,168,169,5,111,0,0,169,170,5,110,0,0,170,171,5,101,0,0,171,
        172,5,32,0,0,172,173,5,119,0,0,173,174,5,97,0,0,174,175,5,121,0,
        0,175,10,1,0,0,0,176,177,5,91,0,0,177,12,1,0,0,0,178,179,5,93,0,
        0,179,14,1,0,0,0,180,181,5,91,0,0,181,182,5,76,0,0,182,183,5,97,
        0,0,183,184,5,121,0,0,184,185,5,111,0,0,185,186,5,117,0,0,186,187,
        5,116,0,0,187,188,5,93,0,0,188,16,1,0,0,0,189,190,5,91,0,0,190,191,
        5,67,0,0,191,192,5,117,0,0,192,193,5,115,0,0,193,194,5,116,0,0,194,
        195,5,111,0,0,195,196,5,109,0,0,196,197,5,32,0,0,197,198,5,82,0,
        0,198,199,5,111,0,0,199,200,5,111,0,0,200,201,5,109,0,0,201,202,
        5,115,0,0,202,211,5,93,0,0,203,204,5,91,0,0,204,205,5,82,0,0,205,
        206,5,111,0,0,206,207,5,111,0,0,207,208,5,109,0,0,208,209,5,115,
        0,0,209,211,5,93,0,0,210,189,1,0,0,0,210,203,1,0,0,0,211,18,1,0,
        0,0,212,213,5,91,0,0,213,214,5,72,0,0,214,215,5,97,0,0,215,216,5,
        108,0,0,216,217,5,108,0,0,217,218,5,119,0,0,218,219,5,97,0,0,219,
        220,5,121,0,0,220,221,5,115,0,0,221,222,5,93,0,0,222,20,1,0,0,0,
        223,224,5,118,0,0,224,225,5,105,0,0,225,226,5,115,0,0,226,227,5,
        105,0,0,227,228,5,98,0,0,228,229,5,108,0,0,229,230,5,101,0,0,230,
        22,1,0,0,0,231,232,5,102,0,0,232,233,5,111,0,0,233,234,5,103,0,0,
        234,235,5,103,0,0,235,236,5,121,0,0,236,24,1,0,0,0,237,238,5,87,
        0,0,238,239,5,111,0,0,239,240,5,114,0,0,240,241,5,108,0,0,241,242,
        5,100,0,0,242,26,1,0,0,0,243,244,5,76,0,0,244,245,5,101,0,0,245,
        246,5,118,0,0,246,247,5,101,0,0,247,248,5,108,0,0,248,28,1,0,0,0,
        249,250,5,83,0,0,250,251,5,112,0,0,251,252,5,97,0,0,252,253,5,119,
        0,0,253,254,5,110,0,0,254,30,1,0,0,0,255,256,5,87,0,0,256,257,5,
        105,0,0,257,258,5,108,0,0,258,259,5,100,0,0,259,32,1,0,0,0,260,261,
        5,83,0,0,261,262,5,104,0,0,262,263,5,111,0,0,263,264,5,112,0,0,264,
        34,1,0,0,0,265,266,5,82,0,0,266,267,5,105,0,0,267,268,5,100,0,0,
        268,269,5,100,0,0,269,270,5,108,0,0,270,271,5,101,0,0,271,36,1,0,
        0,0,272,273,5,66,0,0,273,274,5,111,0,0,274,275,5,115,0,0,275,276,
        5,115,0,0,276,38,1,0,0,0,277,278,5,71,0,0,278,279,5,97,0,0,279,280,
        5,116,0,0,280,281,5,101,0,0,281,40,1,0,0,0,282,283,5,84,0,0,283,
        284,5,114,0,0,284,285,5,101,0,0,285,286,5,97,0,0,286,287,5,115,0,
        0,287,288,5,117,0,0,288,289,5,114,0,0,289,290,5,101,0,0,290,42,1,
        0,0,0,291,292,5,67,0,0,292,293,5,104,0,0,293,294,5,97,0,0,294,295,
        5,108,0,0,295,296,5,108,0,0,296,297,5,101,0,0,297,298,5,110,0,0,
        298,299,5,103,0,0,299,300,5,101,0,0,300,44,1,0,0,0,301,302,5,80,
        0,0,302,303,5,97,0,0,303,304,5,117,0,0,304,305,5,115,0,0,305,306,
        5,101,0,0,306,46,1,0,0,0,307,308,5,83,0,0,308,309,5,116,0,0,309,
        310,5,111,0,0,310,311,5,114,0,0,311,312,5,121,0,0,312,48,1,0,0,0,
        313,314,5,111,0,0,314,315,5,112,0,0,315,316,5,101,0,0,316,317,5,
        110,0,0,317,50,1,0,0,0,318,319,5,99,0,0,319,320,5,108,0,0,320,321,
        5,111,0,0,321,322,5,115,0,0,322,323,5,101,0,0,323,324,5,100,0,0,
        324,52,1,0,0,0,325,326,5,108,0,0,326,327,5,111,0,0,327,328,5,99,
        0,0,328,329,5,107,0,0,329,330,5,101,0,0,330,331,5,100,0,0,331,54,
        1,0,0,0,332,333,5,101,0,0,333,334,5,118,0,0,334,335,5,101,0,0,335,
        336,5,110,0,0,336,337,5,116,0,0,337,56,1,0,0,0,338,339,5,112,0,0,
        339,340,5,101,0,0,340,341,5,114,0,0,341,342,5,109,0,0,342,343,5,
        97,0,0,343,344,5,110,0,0,344,345,5,101,0,0,345,346,5,110,0,0,346,
        347,5,116,0,0,347,58,1,0,0,0,348,349,5,101,0,0,349,350,5,110,0,0,
        350,351,5,116,0,0,351,352,5,97,0,0,352,353,5,110,0,0,353,354,5,103,
        0,0,354,355,5,108,0,0,355,356,5,101,0,0,356,357,5,100,0,0,357,60,
        1,0,0,0,358,359,5,78,0,0,359,360,5,111,0,0,360,361,5,114,0,0,361,
        362,5,116,0,0,362,377,5,104,0,0,363,364,5,69,0,0,364,365,5,97,0,
        0,365,366,5,115,0,0,366,377,5,116,0,0,367,368,5,83,0,0,368,369,5,
        111,0,0,369,370,5,117,0,0,370,371,5,116,0,0,371,377,5,104,0,0,372,
        373,5,87,0,0,373,374,5,101,0,0,374,375,5,115,0,0,375,377,5,116,0,
        0,376,358,1,0,0,0,376,363,1,0,0,0,376,367,1,0,0,0,376,372,1,0,0,
        0,377,62,1,0,0,0,378,379,5,116,0,0,379,380,5,117,0,0,380,381,5,116,
        0,0,381,382,5,111,0,0,382,383,5,114,0,0,383,384,5,105,0,0,384,385,
        5,97,0,0,385,386,5,108,0,0,386,64,1,0,0,0,387,388,5,116,0,0,388,
        389,5,114,0,0,389,390,5,105,0,0,390,391,5,103,0,0,391,392,5,103,
        0,0,392,393,5,101,0,0,393,394,5,114,0,0,394,66,1,0,0,0,395,396,5,
        81,0,0,396,397,5,114,0,0,397,398,5,111,0,0,398,399,5,103,0,0,399,
        400,5,117,0,0,400,401,5,101,0,0,401,402,5,60,0,0,402,68,1,0,0,0,
        403,404,5,62,0,0,404,405,5,81,0,0,405,406,5,114,0,0,406,407,5,111,
        0,0,407,408,5,103,0,0,408,409,5,117,0,0,409,410,5,101,0,0,410,70,
        1,0,0,0,411,412,5,126,0,0,412,72,1,0,0,0,413,414,5,124,0,0,414,74,
        1,0,0,0,415,416,5,44,0,0,416,76,1,0,0,0,417,418,5,35,0,0,418,78,
        1,0,0,0,419,420,5,46,0,0,420,421,5,46,0,0,421,80,1,0,0,0,422,423,
        5,95,0,0,423,424,5,95,0,0,424,82,1,0,0,0,425,426,7,0,0,0,426,84,
        1,0,0,0,427,428,3,83,41,0,428,430,3,83,41,0,429,431,3,83,41,0,430,
        429,1,0,0,0,431,432,1,0,0,0,432,430,1,0,0,0,432,433,1,0,0,0,433,
        86,1,0,0,0,434,436,3,83,41,0,435,434,1,0,0,0,435,436,1,0,0,0,436,
        437,1,0,0,0,437,439,5,46,0,0,438,440,3,83,41,0,439,438,1,0,0,0,440,
        441,1,0,0,0,441,439,1,0,0,0,441,442,1,0,0,0,442,88,1,0,0,0,443,445,
        3,83,41,0,444,443,1,0,0,0,445,448,1,0,0,0,446,444,1,0,0,0,446,447,
        1,0,0,0,447,451,1,0,0,0,448,446,1,0,0,0,449,451,3,87,43,0,450,446,
        1,0,0,0,450,449,1,0,0,0,451,452,1,0,0,0,452,453,5,106,0,0,453,90,
        1,0,0,0,454,455,7,1,0,0,455,92,1,0,0,0,456,457,7,2,0,0,457,94,1,
        0,0,0,458,459,7,3,0,0,459,96,1,0,0,0,460,463,3,93,46,0,461,463,3,
        95,47,0,462,460,1,0,0,0,462,461,1,0,0,0,463,98,1,0,0,0,464,468,5,
        34,0,0,465,467,9,0,0,0,466,465,1,0,0,0,467,470,1,0,0,0,468,469,1,
        0,0,0,468,466,1,0,0,0,469,471,1,0,0,0,470,468,1,0,0,0,471,472,5,
        34,0,0,472,100,1,0,0,0,473,476,5,95,0,0,474,476,3,97,48,0,475,473,
        1,0,0,0,475,474,1,0,0,0,476,477,1,0,0,0,477,478,3,97,48,0,478,102,
        1,0,0,0,479,480,5,61,0,0,480,487,5,61,0,0,481,484,5,95,0,0,482,484,
        3,83,41,0,483,481,1,0,0,0,483,482,1,0,0,0,484,485,1,0,0,0,485,487,
        3,83,41,0,486,479,1,0,0,0,486,483,1,0,0,0,487,104,1,0,0,0,488,491,
        5,42,0,0,489,492,3,97,48,0,490,492,3,83,41,0,491,489,1,0,0,0,491,
        490,1,0,0,0,492,493,1,0,0,0,493,491,1,0,0,0,493,494,1,0,0,0,494,
        106,1,0,0,0,495,497,7,4,0,0,496,495,1,0,0,0,497,498,1,0,0,0,498,
        496,1,0,0,0,498,499,1,0,0,0,499,500,1,0,0,0,500,501,6,53,0,0,501,
        108,1,0,0,0,502,504,5,59,0,0,503,502,1,0,0,0,504,505,1,0,0,0,505,
        503,1,0,0,0,505,506,1,0,0,0,506,507,1,0,0,0,507,508,6,54,0,0,508,
        110,1,0,0,0,509,510,5,47,0,0,510,511,5,42,0,0,511,515,1,0,0,0,512,
        514,9,0,0,0,513,512,1,0,0,0,514,517,1,0,0,0,515,516,1,0,0,0,515,
        513,1,0,0,0,516,518,1,0,0,0,517,515,1,0,0,0,518,519,5,42,0,0,519,
        520,5,47,0,0,520,521,1,0,0,0,521,522,6,55,0,0,522,112,1,0,0,0,523,
        524,5,47,0,0,524,525,5,47,0,0,525,529,1,0,0,0,526,528,8,5,0,0,527,
        526,1,0,0,0,528,531,1,0,0,0,529,527,1,0,0,0,529,530,1,0,0,0,530,
        532,1,0,0,0,531,529,1,0,0,0,532,533,6,56,0,0,533,114,1,0,0,0,19,
        0,210,376,432,435,441,446,450,462,468,475,483,486,491,493,498,505,
        515,529,1,6,0,0
    ]

class QrogueAreasLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    LAYOUT = 8
    ROOMS = 9
    HALLWAYS = 10
    VISIBLE_LITERAL = 11
    FOGGY_LITERAL = 12
    WORLD_LITERAL = 13
    LEVEL_LITERAL = 14
    SPAWN_LITERAL = 15
    WILD_LITERAL = 16
    SHOP_LITERAL = 17
    RIDDLE_LITERAL = 18
    BOSS_LITERAL = 19
    GATE_ROOM_LITERAL = 20
    TREASURE_LITERAL = 21
    CHALLENGE_LITERAL = 22
    PAUSE_LITERAL = 23
    STORY_LITERAL = 24
    OPEN_LITERAL = 25
    CLOSED_LITERAL = 26
    LOCKED_LITERAL = 27
    EVENT_LITERAL = 28
    PERMANENT_LITERAL = 29
    ENTANGLED_LITERAL = 30
    DIRECTION = 31
    TUTORIAL_LITERAL = 32
    TRIGGER_LITERAL = 33
    HEADER = 34
    ENDER = 35
    HORIZONTAL_SEPARATOR = 36
    VERTICAL_SEPARATOR = 37
    LIST_SEPARATOR = 38
    WALL = 39
    EMPTY_HALLWAY = 40
    EMPTY_ROOM = 41
    DIGIT = 42
    INTEGER = 43
    FLOAT = 44
    IMAG_NUMBER = 45
    SIGN = 46
    CHARACTER_LOW = 47
    CHARACTER_UP = 48
    CHARACTER = 49
    TEXT = 50
    ROOM_ID = 51
    HALLWAY_ID = 52
    REFERENCE = 53
    WS = 54
    UNIVERSAL_SEPARATOR = 55
    COMMENT = 56
    LINE_COMMENT = 57

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ u"DEFAULT_MODE" ]

    literalNames = [ u"<INVALID>",
            u"':'", u"'('", u"')'", u"'TODO: implement in importing grammar #override'", 
            u"'one way'", u"'['", u"']'", u"'[Layout]'", u"'[Hallways]'", 
            u"'visible'", u"'foggy'", u"'World'", u"'Level'", u"'Spawn'", 
            u"'Wild'", u"'Shop'", u"'Riddle'", u"'Boss'", u"'Gate'", u"'Treasure'", 
            u"'Challenge'", u"'Pause'", u"'Story'", u"'open'", u"'closed'", 
            u"'locked'", u"'event'", u"'permanent'", u"'entangled'", u"'tutorial'", 
            u"'trigger'", u"'Qrogue<'", u"'>Qrogue'", u"'~'", u"'|'", u"','", 
            u"'#'", u"'..'", u"'__'" ]

    symbolicNames = [ u"<INVALID>",
            u"LAYOUT", u"ROOMS", u"HALLWAYS", u"VISIBLE_LITERAL", u"FOGGY_LITERAL", 
            u"WORLD_LITERAL", u"LEVEL_LITERAL", u"SPAWN_LITERAL", u"WILD_LITERAL", 
            u"SHOP_LITERAL", u"RIDDLE_LITERAL", u"BOSS_LITERAL", u"GATE_ROOM_LITERAL", 
            u"TREASURE_LITERAL", u"CHALLENGE_LITERAL", u"PAUSE_LITERAL", 
            u"STORY_LITERAL", u"OPEN_LITERAL", u"CLOSED_LITERAL", u"LOCKED_LITERAL", 
            u"EVENT_LITERAL", u"PERMANENT_LITERAL", u"ENTANGLED_LITERAL", 
            u"DIRECTION", u"TUTORIAL_LITERAL", u"TRIGGER_LITERAL", u"HEADER", 
            u"ENDER", u"HORIZONTAL_SEPARATOR", u"VERTICAL_SEPARATOR", u"LIST_SEPARATOR", 
            u"WALL", u"EMPTY_HALLWAY", u"EMPTY_ROOM", u"DIGIT", u"INTEGER", 
            u"FLOAT", u"IMAG_NUMBER", u"SIGN", u"CHARACTER_LOW", u"CHARACTER_UP", 
            u"CHARACTER", u"TEXT", u"ROOM_ID", u"HALLWAY_ID", u"REFERENCE", 
            u"WS", u"UNIVERSAL_SEPARATOR", u"COMMENT", u"LINE_COMMENT" ]

    ruleNames = [ u"T__0", u"T__1", u"T__2", u"T__3", u"T__4", u"T__5", 
                  u"T__6", u"LAYOUT", u"ROOMS", u"HALLWAYS", u"VISIBLE_LITERAL", 
                  u"FOGGY_LITERAL", u"WORLD_LITERAL", u"LEVEL_LITERAL", 
                  u"SPAWN_LITERAL", u"WILD_LITERAL", u"SHOP_LITERAL", u"RIDDLE_LITERAL", 
                  u"BOSS_LITERAL", u"GATE_ROOM_LITERAL", u"TREASURE_LITERAL", 
                  u"CHALLENGE_LITERAL", u"PAUSE_LITERAL", u"STORY_LITERAL", 
                  u"OPEN_LITERAL", u"CLOSED_LITERAL", u"LOCKED_LITERAL", 
                  u"EVENT_LITERAL", u"PERMANENT_LITERAL", u"ENTANGLED_LITERAL", 
                  u"DIRECTION", u"TUTORIAL_LITERAL", u"TRIGGER_LITERAL", 
                  u"HEADER", u"ENDER", u"HORIZONTAL_SEPARATOR", u"VERTICAL_SEPARATOR", 
                  u"LIST_SEPARATOR", u"WALL", u"EMPTY_HALLWAY", u"EMPTY_ROOM", 
                  u"DIGIT", u"INTEGER", u"FLOAT", u"IMAG_NUMBER", u"SIGN", 
                  u"CHARACTER_LOW", u"CHARACTER_UP", u"CHARACTER", u"TEXT", 
                  u"ROOM_ID", u"HALLWAY_ID", u"REFERENCE", u"WS", u"UNIVERSAL_SEPARATOR", 
                  u"COMMENT", u"LINE_COMMENT" ]

    grammarFileName = u"QrogueAreas.g4"

    def __init__(self, input=None, output=sys.stdout):
        super(QrogueAreasLexer, self).__init__(input, output=output)
        self.checkVersion("4.10.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None



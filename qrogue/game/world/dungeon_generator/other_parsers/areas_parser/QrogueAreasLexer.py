# Generated from D:/Documents/pycharm_workspace/Qrogue/qrogue/game/world/dungeon_generator/other_parsers\QrogueAreas.g4 by ANTLR 4.10.1
# encoding: utf-8
from __future__ import print_function
from antlr4 import *
from io import StringIO
import sys


def serializedATN():
    return [
        4,0,54,506,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,
        3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,
        3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,
        3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,
        4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,
        8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,
        8,1,8,1,8,1,8,3,8,205,8,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,
        9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,
        1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,
        1,13,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,16,
        1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,18,1,18,
        1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,
        1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,
        1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,24,1,24,1,24,
        1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,
        1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,27,1,27,1,27,
        1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,
        1,27,1,27,3,27,349,8,27,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,
        1,28,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,30,1,30,1,30,1,30,
        1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,32,
        1,32,1,33,1,33,1,34,1,34,1,35,1,35,1,36,1,36,1,36,1,37,1,37,1,37,
        1,38,1,38,1,39,1,39,1,39,4,39,403,8,39,11,39,12,39,404,1,40,3,40,
        408,8,40,1,40,1,40,4,40,412,8,40,11,40,12,40,413,1,41,5,41,417,8,
        41,10,41,12,41,420,9,41,1,41,3,41,423,8,41,1,41,1,41,1,42,1,42,1,
        43,1,43,1,44,1,44,1,45,1,45,3,45,435,8,45,1,46,1,46,5,46,439,8,46,
        10,46,12,46,442,9,46,1,46,1,46,1,47,1,47,3,47,448,8,47,1,47,1,47,
        1,48,1,48,1,48,1,48,3,48,456,8,48,1,48,3,48,459,8,48,1,49,1,49,1,
        49,4,49,464,8,49,11,49,12,49,465,1,50,4,50,469,8,50,11,50,12,50,
        470,1,50,1,50,1,51,4,51,476,8,51,11,51,12,51,477,1,51,1,51,1,52,
        1,52,1,52,1,52,5,52,486,8,52,10,52,12,52,489,9,52,1,52,1,52,1,52,
        1,52,1,52,1,53,1,53,1,53,1,53,5,53,500,8,53,10,53,12,53,503,9,53,
        1,53,1,53,2,440,487,0,54,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,
        19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,
        41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,
        63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,
        85,43,87,44,89,45,91,46,93,47,95,48,97,49,99,50,101,51,103,52,105,
        53,107,54,1,0,6,1,0,48,57,2,0,43,43,45,45,1,0,97,122,1,0,65,90,3,
        0,9,10,13,13,32,32,2,0,10,10,13,13,525,0,1,1,0,0,0,0,3,1,0,0,0,0,
        5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,
        1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,
        1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,
        1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,
        1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,
        1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,
        1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,
        1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,
        1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,
        1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,
        105,1,0,0,0,0,107,1,0,0,0,1,109,1,0,0,0,3,111,1,0,0,0,5,113,1,0,
        0,0,7,115,1,0,0,0,9,162,1,0,0,0,11,170,1,0,0,0,13,172,1,0,0,0,15,
        174,1,0,0,0,17,204,1,0,0,0,19,206,1,0,0,0,21,217,1,0,0,0,23,225,
        1,0,0,0,25,231,1,0,0,0,27,237,1,0,0,0,29,243,1,0,0,0,31,249,1,0,
        0,0,33,254,1,0,0,0,35,259,1,0,0,0,37,266,1,0,0,0,39,271,1,0,0,0,
        41,276,1,0,0,0,43,285,1,0,0,0,45,290,1,0,0,0,47,297,1,0,0,0,49,304,
        1,0,0,0,51,310,1,0,0,0,53,320,1,0,0,0,55,348,1,0,0,0,57,350,1,0,
        0,0,59,359,1,0,0,0,61,367,1,0,0,0,63,375,1,0,0,0,65,383,1,0,0,0,
        67,385,1,0,0,0,69,387,1,0,0,0,71,389,1,0,0,0,73,391,1,0,0,0,75,394,
        1,0,0,0,77,397,1,0,0,0,79,399,1,0,0,0,81,407,1,0,0,0,83,422,1,0,
        0,0,85,426,1,0,0,0,87,428,1,0,0,0,89,430,1,0,0,0,91,434,1,0,0,0,
        93,436,1,0,0,0,95,447,1,0,0,0,97,458,1,0,0,0,99,460,1,0,0,0,101,
        468,1,0,0,0,103,475,1,0,0,0,105,481,1,0,0,0,107,495,1,0,0,0,109,
        110,5,58,0,0,110,2,1,0,0,0,111,112,5,40,0,0,112,4,1,0,0,0,113,114,
        5,41,0,0,114,6,1,0,0,0,115,116,5,84,0,0,116,117,5,79,0,0,117,118,
        5,68,0,0,118,119,5,79,0,0,119,120,5,58,0,0,120,121,5,32,0,0,121,
        122,5,105,0,0,122,123,5,109,0,0,123,124,5,112,0,0,124,125,5,108,
        0,0,125,126,5,101,0,0,126,127,5,109,0,0,127,128,5,101,0,0,128,129,
        5,110,0,0,129,130,5,116,0,0,130,131,5,32,0,0,131,132,5,105,0,0,132,
        133,5,110,0,0,133,134,5,32,0,0,134,135,5,105,0,0,135,136,5,109,0,
        0,136,137,5,112,0,0,137,138,5,111,0,0,138,139,5,114,0,0,139,140,
        5,116,0,0,140,141,5,105,0,0,141,142,5,110,0,0,142,143,5,103,0,0,
        143,144,5,32,0,0,144,145,5,103,0,0,145,146,5,114,0,0,146,147,5,97,
        0,0,147,148,5,109,0,0,148,149,5,109,0,0,149,150,5,97,0,0,150,151,
        5,114,0,0,151,152,5,32,0,0,152,153,5,35,0,0,153,154,5,111,0,0,154,
        155,5,118,0,0,155,156,5,101,0,0,156,157,5,114,0,0,157,158,5,114,
        0,0,158,159,5,105,0,0,159,160,5,100,0,0,160,161,5,101,0,0,161,8,
        1,0,0,0,162,163,5,111,0,0,163,164,5,110,0,0,164,165,5,101,0,0,165,
        166,5,32,0,0,166,167,5,119,0,0,167,168,5,97,0,0,168,169,5,121,0,
        0,169,10,1,0,0,0,170,171,5,91,0,0,171,12,1,0,0,0,172,173,5,93,0,
        0,173,14,1,0,0,0,174,175,5,91,0,0,175,176,5,76,0,0,176,177,5,97,
        0,0,177,178,5,121,0,0,178,179,5,111,0,0,179,180,5,117,0,0,180,181,
        5,116,0,0,181,182,5,93,0,0,182,16,1,0,0,0,183,184,5,91,0,0,184,185,
        5,67,0,0,185,186,5,117,0,0,186,187,5,115,0,0,187,188,5,116,0,0,188,
        189,5,111,0,0,189,190,5,109,0,0,190,191,5,32,0,0,191,192,5,82,0,
        0,192,193,5,111,0,0,193,194,5,111,0,0,194,195,5,109,0,0,195,196,
        5,115,0,0,196,205,5,93,0,0,197,198,5,91,0,0,198,199,5,82,0,0,199,
        200,5,111,0,0,200,201,5,111,0,0,201,202,5,109,0,0,202,203,5,115,
        0,0,203,205,5,93,0,0,204,183,1,0,0,0,204,197,1,0,0,0,205,18,1,0,
        0,0,206,207,5,91,0,0,207,208,5,72,0,0,208,209,5,97,0,0,209,210,5,
        108,0,0,210,211,5,108,0,0,211,212,5,119,0,0,212,213,5,97,0,0,213,
        214,5,121,0,0,214,215,5,115,0,0,215,216,5,93,0,0,216,20,1,0,0,0,
        217,218,5,118,0,0,218,219,5,105,0,0,219,220,5,115,0,0,220,221,5,
        105,0,0,221,222,5,98,0,0,222,223,5,108,0,0,223,224,5,101,0,0,224,
        22,1,0,0,0,225,226,5,102,0,0,226,227,5,111,0,0,227,228,5,103,0,0,
        228,229,5,103,0,0,229,230,5,121,0,0,230,24,1,0,0,0,231,232,5,87,
        0,0,232,233,5,111,0,0,233,234,5,114,0,0,234,235,5,108,0,0,235,236,
        5,100,0,0,236,26,1,0,0,0,237,238,5,76,0,0,238,239,5,101,0,0,239,
        240,5,118,0,0,240,241,5,101,0,0,241,242,5,108,0,0,242,28,1,0,0,0,
        243,244,5,83,0,0,244,245,5,112,0,0,245,246,5,97,0,0,246,247,5,119,
        0,0,247,248,5,110,0,0,248,30,1,0,0,0,249,250,5,87,0,0,250,251,5,
        105,0,0,251,252,5,108,0,0,252,253,5,100,0,0,253,32,1,0,0,0,254,255,
        5,83,0,0,255,256,5,104,0,0,256,257,5,111,0,0,257,258,5,112,0,0,258,
        34,1,0,0,0,259,260,5,82,0,0,260,261,5,105,0,0,261,262,5,100,0,0,
        262,263,5,100,0,0,263,264,5,108,0,0,264,265,5,101,0,0,265,36,1,0,
        0,0,266,267,5,66,0,0,267,268,5,111,0,0,268,269,5,115,0,0,269,270,
        5,115,0,0,270,38,1,0,0,0,271,272,5,71,0,0,272,273,5,97,0,0,273,274,
        5,116,0,0,274,275,5,101,0,0,275,40,1,0,0,0,276,277,5,84,0,0,277,
        278,5,114,0,0,278,279,5,101,0,0,279,280,5,97,0,0,280,281,5,115,0,
        0,281,282,5,117,0,0,282,283,5,114,0,0,283,284,5,101,0,0,284,42,1,
        0,0,0,285,286,5,111,0,0,286,287,5,112,0,0,287,288,5,101,0,0,288,
        289,5,110,0,0,289,44,1,0,0,0,290,291,5,99,0,0,291,292,5,108,0,0,
        292,293,5,111,0,0,293,294,5,115,0,0,294,295,5,101,0,0,295,296,5,
        100,0,0,296,46,1,0,0,0,297,298,5,108,0,0,298,299,5,111,0,0,299,300,
        5,99,0,0,300,301,5,107,0,0,301,302,5,101,0,0,302,303,5,100,0,0,303,
        48,1,0,0,0,304,305,5,101,0,0,305,306,5,118,0,0,306,307,5,101,0,0,
        307,308,5,110,0,0,308,309,5,116,0,0,309,50,1,0,0,0,310,311,5,112,
        0,0,311,312,5,101,0,0,312,313,5,114,0,0,313,314,5,109,0,0,314,315,
        5,97,0,0,315,316,5,110,0,0,316,317,5,101,0,0,317,318,5,110,0,0,318,
        319,5,116,0,0,319,52,1,0,0,0,320,321,5,101,0,0,321,322,5,110,0,0,
        322,323,5,116,0,0,323,324,5,97,0,0,324,325,5,110,0,0,325,326,5,103,
        0,0,326,327,5,108,0,0,327,328,5,101,0,0,328,329,5,100,0,0,329,54,
        1,0,0,0,330,331,5,78,0,0,331,332,5,111,0,0,332,333,5,114,0,0,333,
        334,5,116,0,0,334,349,5,104,0,0,335,336,5,69,0,0,336,337,5,97,0,
        0,337,338,5,115,0,0,338,349,5,116,0,0,339,340,5,83,0,0,340,341,5,
        111,0,0,341,342,5,117,0,0,342,343,5,116,0,0,343,349,5,104,0,0,344,
        345,5,87,0,0,345,346,5,101,0,0,346,347,5,115,0,0,347,349,5,116,0,
        0,348,330,1,0,0,0,348,335,1,0,0,0,348,339,1,0,0,0,348,344,1,0,0,
        0,349,56,1,0,0,0,350,351,5,116,0,0,351,352,5,117,0,0,352,353,5,116,
        0,0,353,354,5,111,0,0,354,355,5,114,0,0,355,356,5,105,0,0,356,357,
        5,97,0,0,357,358,5,108,0,0,358,58,1,0,0,0,359,360,5,116,0,0,360,
        361,5,114,0,0,361,362,5,105,0,0,362,363,5,103,0,0,363,364,5,103,
        0,0,364,365,5,101,0,0,365,366,5,114,0,0,366,60,1,0,0,0,367,368,5,
        81,0,0,368,369,5,114,0,0,369,370,5,111,0,0,370,371,5,103,0,0,371,
        372,5,117,0,0,372,373,5,101,0,0,373,374,5,60,0,0,374,62,1,0,0,0,
        375,376,5,62,0,0,376,377,5,81,0,0,377,378,5,114,0,0,378,379,5,111,
        0,0,379,380,5,103,0,0,380,381,5,117,0,0,381,382,5,101,0,0,382,64,
        1,0,0,0,383,384,5,126,0,0,384,66,1,0,0,0,385,386,5,124,0,0,386,68,
        1,0,0,0,387,388,5,44,0,0,388,70,1,0,0,0,389,390,5,35,0,0,390,72,
        1,0,0,0,391,392,5,46,0,0,392,393,5,46,0,0,393,74,1,0,0,0,394,395,
        5,95,0,0,395,396,5,95,0,0,396,76,1,0,0,0,397,398,7,0,0,0,398,78,
        1,0,0,0,399,400,3,77,38,0,400,402,3,77,38,0,401,403,3,77,38,0,402,
        401,1,0,0,0,403,404,1,0,0,0,404,402,1,0,0,0,404,405,1,0,0,0,405,
        80,1,0,0,0,406,408,3,77,38,0,407,406,1,0,0,0,407,408,1,0,0,0,408,
        409,1,0,0,0,409,411,5,46,0,0,410,412,3,77,38,0,411,410,1,0,0,0,412,
        413,1,0,0,0,413,411,1,0,0,0,413,414,1,0,0,0,414,82,1,0,0,0,415,417,
        3,77,38,0,416,415,1,0,0,0,417,420,1,0,0,0,418,416,1,0,0,0,418,419,
        1,0,0,0,419,423,1,0,0,0,420,418,1,0,0,0,421,423,3,81,40,0,422,418,
        1,0,0,0,422,421,1,0,0,0,423,424,1,0,0,0,424,425,5,106,0,0,425,84,
        1,0,0,0,426,427,7,1,0,0,427,86,1,0,0,0,428,429,7,2,0,0,429,88,1,
        0,0,0,430,431,7,3,0,0,431,90,1,0,0,0,432,435,3,87,43,0,433,435,3,
        89,44,0,434,432,1,0,0,0,434,433,1,0,0,0,435,92,1,0,0,0,436,440,5,
        34,0,0,437,439,9,0,0,0,438,437,1,0,0,0,439,442,1,0,0,0,440,441,1,
        0,0,0,440,438,1,0,0,0,441,443,1,0,0,0,442,440,1,0,0,0,443,444,5,
        34,0,0,444,94,1,0,0,0,445,448,5,95,0,0,446,448,3,91,45,0,447,445,
        1,0,0,0,447,446,1,0,0,0,448,449,1,0,0,0,449,450,3,91,45,0,450,96,
        1,0,0,0,451,452,5,61,0,0,452,459,5,61,0,0,453,456,5,95,0,0,454,456,
        3,77,38,0,455,453,1,0,0,0,455,454,1,0,0,0,456,457,1,0,0,0,457,459,
        3,77,38,0,458,451,1,0,0,0,458,455,1,0,0,0,459,98,1,0,0,0,460,463,
        5,42,0,0,461,464,3,91,45,0,462,464,3,77,38,0,463,461,1,0,0,0,463,
        462,1,0,0,0,464,465,1,0,0,0,465,463,1,0,0,0,465,466,1,0,0,0,466,
        100,1,0,0,0,467,469,7,4,0,0,468,467,1,0,0,0,469,470,1,0,0,0,470,
        468,1,0,0,0,470,471,1,0,0,0,471,472,1,0,0,0,472,473,6,50,0,0,473,
        102,1,0,0,0,474,476,5,59,0,0,475,474,1,0,0,0,476,477,1,0,0,0,477,
        475,1,0,0,0,477,478,1,0,0,0,478,479,1,0,0,0,479,480,6,51,0,0,480,
        104,1,0,0,0,481,482,5,47,0,0,482,483,5,42,0,0,483,487,1,0,0,0,484,
        486,9,0,0,0,485,484,1,0,0,0,486,489,1,0,0,0,487,488,1,0,0,0,487,
        485,1,0,0,0,488,490,1,0,0,0,489,487,1,0,0,0,490,491,5,42,0,0,491,
        492,5,47,0,0,492,493,1,0,0,0,493,494,6,52,0,0,494,106,1,0,0,0,495,
        496,5,47,0,0,496,497,5,47,0,0,497,501,1,0,0,0,498,500,8,5,0,0,499,
        498,1,0,0,0,500,503,1,0,0,0,501,499,1,0,0,0,501,502,1,0,0,0,502,
        504,1,0,0,0,503,501,1,0,0,0,504,505,6,53,0,0,505,108,1,0,0,0,19,
        0,204,348,404,407,413,418,422,434,440,447,455,458,463,465,470,477,
        487,501,1,6,0,0
    ]

class QrogueAreasLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    LAYOUT = 8
    ROOMS = 9
    HALLWAYS = 10
    VISIBLE_LITERAL = 11
    FOGGY_LITERAL = 12
    WORLD_LITERAL = 13
    LEVEL_LITERAL = 14
    SPAWN_LITERAL = 15
    WILD_LITERAL = 16
    SHOP_LITERAL = 17
    RIDDLE_LITERAL = 18
    BOSS_LITERAL = 19
    GATE_ROOM_LITERAL = 20
    TREASURE_LITERAL = 21
    OPEN_LITERAL = 22
    CLOSED_LITERAL = 23
    LOCKED_LITERAL = 24
    EVENT_LITERAL = 25
    PERMANENT_LITERAL = 26
    ENTANGLED_LITERAL = 27
    DIRECTION = 28
    TUTORIAL_LITERAL = 29
    TRIGGER_LITERAL = 30
    HEADER = 31
    ENDER = 32
    HORIZONTAL_SEPARATOR = 33
    VERTICAL_SEPARATOR = 34
    LIST_SEPARATOR = 35
    WALL = 36
    EMPTY_HALLWAY = 37
    EMPTY_ROOM = 38
    DIGIT = 39
    INTEGER = 40
    FLOAT = 41
    IMAG_NUMBER = 42
    SIGN = 43
    CHARACTER_LOW = 44
    CHARACTER_UP = 45
    CHARACTER = 46
    TEXT = 47
    ROOM_ID = 48
    HALLWAY_ID = 49
    REFERENCE = 50
    WS = 51
    UNIVERSAL_SEPARATOR = 52
    COMMENT = 53
    LINE_COMMENT = 54

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ u"DEFAULT_MODE" ]

    literalNames = [ u"<INVALID>",
            u"':'", u"'('", u"')'", u"'TODO: implement in importing grammar #override'", 
            u"'one way'", u"'['", u"']'", u"'[Layout]'", u"'[Hallways]'", 
            u"'visible'", u"'foggy'", u"'World'", u"'Level'", u"'Spawn'", 
            u"'Wild'", u"'Shop'", u"'Riddle'", u"'Boss'", u"'Gate'", u"'Treasure'", 
            u"'open'", u"'closed'", u"'locked'", u"'event'", u"'permanent'", 
            u"'entangled'", u"'tutorial'", u"'trigger'", u"'Qrogue<'", u"'>Qrogue'", 
            u"'~'", u"'|'", u"','", u"'#'", u"'..'", u"'__'" ]

    symbolicNames = [ u"<INVALID>",
            u"LAYOUT", u"ROOMS", u"HALLWAYS", u"VISIBLE_LITERAL", u"FOGGY_LITERAL", 
            u"WORLD_LITERAL", u"LEVEL_LITERAL", u"SPAWN_LITERAL", u"WILD_LITERAL", 
            u"SHOP_LITERAL", u"RIDDLE_LITERAL", u"BOSS_LITERAL", u"GATE_ROOM_LITERAL", 
            u"TREASURE_LITERAL", u"OPEN_LITERAL", u"CLOSED_LITERAL", u"LOCKED_LITERAL", 
            u"EVENT_LITERAL", u"PERMANENT_LITERAL", u"ENTANGLED_LITERAL", 
            u"DIRECTION", u"TUTORIAL_LITERAL", u"TRIGGER_LITERAL", u"HEADER", 
            u"ENDER", u"HORIZONTAL_SEPARATOR", u"VERTICAL_SEPARATOR", u"LIST_SEPARATOR", 
            u"WALL", u"EMPTY_HALLWAY", u"EMPTY_ROOM", u"DIGIT", u"INTEGER", 
            u"FLOAT", u"IMAG_NUMBER", u"SIGN", u"CHARACTER_LOW", u"CHARACTER_UP", 
            u"CHARACTER", u"TEXT", u"ROOM_ID", u"HALLWAY_ID", u"REFERENCE", 
            u"WS", u"UNIVERSAL_SEPARATOR", u"COMMENT", u"LINE_COMMENT" ]

    ruleNames = [ u"T__0", u"T__1", u"T__2", u"T__3", u"T__4", u"T__5", 
                  u"T__6", u"LAYOUT", u"ROOMS", u"HALLWAYS", u"VISIBLE_LITERAL", 
                  u"FOGGY_LITERAL", u"WORLD_LITERAL", u"LEVEL_LITERAL", 
                  u"SPAWN_LITERAL", u"WILD_LITERAL", u"SHOP_LITERAL", u"RIDDLE_LITERAL", 
                  u"BOSS_LITERAL", u"GATE_ROOM_LITERAL", u"TREASURE_LITERAL", 
                  u"OPEN_LITERAL", u"CLOSED_LITERAL", u"LOCKED_LITERAL", 
                  u"EVENT_LITERAL", u"PERMANENT_LITERAL", u"ENTANGLED_LITERAL", 
                  u"DIRECTION", u"TUTORIAL_LITERAL", u"TRIGGER_LITERAL", 
                  u"HEADER", u"ENDER", u"HORIZONTAL_SEPARATOR", u"VERTICAL_SEPARATOR", 
                  u"LIST_SEPARATOR", u"WALL", u"EMPTY_HALLWAY", u"EMPTY_ROOM", 
                  u"DIGIT", u"INTEGER", u"FLOAT", u"IMAG_NUMBER", u"SIGN", 
                  u"CHARACTER_LOW", u"CHARACTER_UP", u"CHARACTER", u"TEXT", 
                  u"ROOM_ID", u"HALLWAY_ID", u"REFERENCE", u"WS", u"UNIVERSAL_SEPARATOR", 
                  u"COMMENT", u"LINE_COMMENT" ]

    grammarFileName = u"QrogueAreas.g4"

    def __init__(self, input=None, output=sys.stdout):
        super(QrogueAreasLexer, self).__init__(input, output=output)
        self.checkVersion("4.10.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None



# Generated from D:/Workspaces/pycharm-workspace/Qrogue/qrogue/game/world/dungeon_generator/other_parsers\QrogueAreas.g4 by ANTLR 4.12.0
import sys

from antlr4 import *

if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,56,527,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,1,0,1,0,1,1,1,1,1,2,1,2,1,
        3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,
        3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,
        3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,
        4,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,
        7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,
        8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,3,8,209,8,8,1,9,1,9,1,9,1,9,1,
        9,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,
        1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,13,
        1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,
        1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,17,
        1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,19,
        1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,
        1,21,1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,22,1,23,
        1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,25,1,25,
        1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,26,1,27,1,27,
        1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,28,
        1,28,1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,
        1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,3,29,370,8,29,
        1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,31,
        1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,33,
        1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,34,1,34,1,35,1,35,1,36,1,36,
        1,37,1,37,1,38,1,38,1,38,1,39,1,39,1,39,1,40,1,40,1,41,1,41,1,41,
        4,41,424,8,41,11,41,12,41,425,1,42,3,42,429,8,42,1,42,1,42,4,42,
        433,8,42,11,42,12,42,434,1,43,5,43,438,8,43,10,43,12,43,441,9,43,
        1,43,3,43,444,8,43,1,43,1,43,1,44,1,44,1,45,1,45,1,46,1,46,1,47,
        1,47,3,47,456,8,47,1,48,1,48,5,48,460,8,48,10,48,12,48,463,9,48,
        1,48,1,48,1,49,1,49,3,49,469,8,49,1,49,1,49,1,50,1,50,1,50,1,50,
        3,50,477,8,50,1,50,3,50,480,8,50,1,51,1,51,1,51,4,51,485,8,51,11,
        51,12,51,486,1,52,4,52,490,8,52,11,52,12,52,491,1,52,1,52,1,53,4,
        53,497,8,53,11,53,12,53,498,1,53,1,53,1,54,1,54,1,54,1,54,5,54,507,
        8,54,10,54,12,54,510,9,54,1,54,1,54,1,54,1,54,1,54,1,55,1,55,1,55,
        1,55,5,55,521,8,55,10,55,12,55,524,9,55,1,55,1,55,2,461,508,0,56,
        1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,
        27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,
        49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,
        71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,
        93,47,95,48,97,49,99,50,101,51,103,52,105,53,107,54,109,55,111,56,
        1,0,6,1,0,48,57,2,0,43,43,45,45,1,0,97,122,1,0,65,90,3,0,9,10,13,
        13,32,32,2,0,10,10,13,13,546,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,
        0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,
        17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,
        27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,
        37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,
        47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,
        57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,
        67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,
        77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,
        87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,
        97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,
        0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,1,113,1,0,0,0,3,115,
        1,0,0,0,5,117,1,0,0,0,7,119,1,0,0,0,9,166,1,0,0,0,11,174,1,0,0,0,
        13,176,1,0,0,0,15,178,1,0,0,0,17,208,1,0,0,0,19,210,1,0,0,0,21,221,
        1,0,0,0,23,229,1,0,0,0,25,235,1,0,0,0,27,241,1,0,0,0,29,247,1,0,
        0,0,31,253,1,0,0,0,33,258,1,0,0,0,35,265,1,0,0,0,37,270,1,0,0,0,
        39,275,1,0,0,0,41,284,1,0,0,0,43,294,1,0,0,0,45,300,1,0,0,0,47,306,
        1,0,0,0,49,311,1,0,0,0,51,318,1,0,0,0,53,325,1,0,0,0,55,331,1,0,
        0,0,57,341,1,0,0,0,59,369,1,0,0,0,61,371,1,0,0,0,63,380,1,0,0,0,
        65,388,1,0,0,0,67,396,1,0,0,0,69,404,1,0,0,0,71,406,1,0,0,0,73,408,
        1,0,0,0,75,410,1,0,0,0,77,412,1,0,0,0,79,415,1,0,0,0,81,418,1,0,
        0,0,83,420,1,0,0,0,85,428,1,0,0,0,87,443,1,0,0,0,89,447,1,0,0,0,
        91,449,1,0,0,0,93,451,1,0,0,0,95,455,1,0,0,0,97,457,1,0,0,0,99,468,
        1,0,0,0,101,479,1,0,0,0,103,481,1,0,0,0,105,489,1,0,0,0,107,496,
        1,0,0,0,109,502,1,0,0,0,111,516,1,0,0,0,113,114,5,58,0,0,114,2,1,
        0,0,0,115,116,5,40,0,0,116,4,1,0,0,0,117,118,5,41,0,0,118,6,1,0,
        0,0,119,120,5,84,0,0,120,121,5,79,0,0,121,122,5,68,0,0,122,123,5,
        79,0,0,123,124,5,58,0,0,124,125,5,32,0,0,125,126,5,105,0,0,126,127,
        5,109,0,0,127,128,5,112,0,0,128,129,5,108,0,0,129,130,5,101,0,0,
        130,131,5,109,0,0,131,132,5,101,0,0,132,133,5,110,0,0,133,134,5,
        116,0,0,134,135,5,32,0,0,135,136,5,105,0,0,136,137,5,110,0,0,137,
        138,5,32,0,0,138,139,5,105,0,0,139,140,5,109,0,0,140,141,5,112,0,
        0,141,142,5,111,0,0,142,143,5,114,0,0,143,144,5,116,0,0,144,145,
        5,105,0,0,145,146,5,110,0,0,146,147,5,103,0,0,147,148,5,32,0,0,148,
        149,5,103,0,0,149,150,5,114,0,0,150,151,5,97,0,0,151,152,5,109,0,
        0,152,153,5,109,0,0,153,154,5,97,0,0,154,155,5,114,0,0,155,156,5,
        32,0,0,156,157,5,35,0,0,157,158,5,111,0,0,158,159,5,118,0,0,159,
        160,5,101,0,0,160,161,5,114,0,0,161,162,5,114,0,0,162,163,5,105,
        0,0,163,164,5,100,0,0,164,165,5,101,0,0,165,8,1,0,0,0,166,167,5,
        111,0,0,167,168,5,110,0,0,168,169,5,101,0,0,169,170,5,32,0,0,170,
        171,5,119,0,0,171,172,5,97,0,0,172,173,5,121,0,0,173,10,1,0,0,0,
        174,175,5,91,0,0,175,12,1,0,0,0,176,177,5,93,0,0,177,14,1,0,0,0,
        178,179,5,91,0,0,179,180,5,76,0,0,180,181,5,97,0,0,181,182,5,121,
        0,0,182,183,5,111,0,0,183,184,5,117,0,0,184,185,5,116,0,0,185,186,
        5,93,0,0,186,16,1,0,0,0,187,188,5,91,0,0,188,189,5,67,0,0,189,190,
        5,117,0,0,190,191,5,115,0,0,191,192,5,116,0,0,192,193,5,111,0,0,
        193,194,5,109,0,0,194,195,5,32,0,0,195,196,5,82,0,0,196,197,5,111,
        0,0,197,198,5,111,0,0,198,199,5,109,0,0,199,200,5,115,0,0,200,209,
        5,93,0,0,201,202,5,91,0,0,202,203,5,82,0,0,203,204,5,111,0,0,204,
        205,5,111,0,0,205,206,5,109,0,0,206,207,5,115,0,0,207,209,5,93,0,
        0,208,187,1,0,0,0,208,201,1,0,0,0,209,18,1,0,0,0,210,211,5,91,0,
        0,211,212,5,72,0,0,212,213,5,97,0,0,213,214,5,108,0,0,214,215,5,
        108,0,0,215,216,5,119,0,0,216,217,5,97,0,0,217,218,5,121,0,0,218,
        219,5,115,0,0,219,220,5,93,0,0,220,20,1,0,0,0,221,222,5,118,0,0,
        222,223,5,105,0,0,223,224,5,115,0,0,224,225,5,105,0,0,225,226,5,
        98,0,0,226,227,5,108,0,0,227,228,5,101,0,0,228,22,1,0,0,0,229,230,
        5,102,0,0,230,231,5,111,0,0,231,232,5,103,0,0,232,233,5,103,0,0,
        233,234,5,121,0,0,234,24,1,0,0,0,235,236,5,87,0,0,236,237,5,111,
        0,0,237,238,5,114,0,0,238,239,5,108,0,0,239,240,5,100,0,0,240,26,
        1,0,0,0,241,242,5,76,0,0,242,243,5,101,0,0,243,244,5,118,0,0,244,
        245,5,101,0,0,245,246,5,108,0,0,246,28,1,0,0,0,247,248,5,83,0,0,
        248,249,5,112,0,0,249,250,5,97,0,0,250,251,5,119,0,0,251,252,5,110,
        0,0,252,30,1,0,0,0,253,254,5,87,0,0,254,255,5,105,0,0,255,256,5,
        108,0,0,256,257,5,100,0,0,257,32,1,0,0,0,258,259,5,82,0,0,259,260,
        5,105,0,0,260,261,5,100,0,0,261,262,5,100,0,0,262,263,5,108,0,0,
        263,264,5,101,0,0,264,34,1,0,0,0,265,266,5,66,0,0,266,267,5,111,
        0,0,267,268,5,115,0,0,268,269,5,115,0,0,269,36,1,0,0,0,270,271,5,
        71,0,0,271,272,5,97,0,0,272,273,5,116,0,0,273,274,5,101,0,0,274,
        38,1,0,0,0,275,276,5,84,0,0,276,277,5,114,0,0,277,278,5,101,0,0,
        278,279,5,97,0,0,279,280,5,115,0,0,280,281,5,117,0,0,281,282,5,114,
        0,0,282,283,5,101,0,0,283,40,1,0,0,0,284,285,5,67,0,0,285,286,5,
        104,0,0,286,287,5,97,0,0,287,288,5,108,0,0,288,289,5,108,0,0,289,
        290,5,101,0,0,290,291,5,110,0,0,291,292,5,103,0,0,292,293,5,101,
        0,0,293,42,1,0,0,0,294,295,5,80,0,0,295,296,5,97,0,0,296,297,5,117,
        0,0,297,298,5,115,0,0,298,299,5,101,0,0,299,44,1,0,0,0,300,301,5,
        83,0,0,301,302,5,116,0,0,302,303,5,111,0,0,303,304,5,114,0,0,304,
        305,5,121,0,0,305,46,1,0,0,0,306,307,5,111,0,0,307,308,5,112,0,0,
        308,309,5,101,0,0,309,310,5,110,0,0,310,48,1,0,0,0,311,312,5,99,
        0,0,312,313,5,108,0,0,313,314,5,111,0,0,314,315,5,115,0,0,315,316,
        5,101,0,0,316,317,5,100,0,0,317,50,1,0,0,0,318,319,5,108,0,0,319,
        320,5,111,0,0,320,321,5,99,0,0,321,322,5,107,0,0,322,323,5,101,0,
        0,323,324,5,100,0,0,324,52,1,0,0,0,325,326,5,101,0,0,326,327,5,118,
        0,0,327,328,5,101,0,0,328,329,5,110,0,0,329,330,5,116,0,0,330,54,
        1,0,0,0,331,332,5,112,0,0,332,333,5,101,0,0,333,334,5,114,0,0,334,
        335,5,109,0,0,335,336,5,97,0,0,336,337,5,110,0,0,337,338,5,101,0,
        0,338,339,5,110,0,0,339,340,5,116,0,0,340,56,1,0,0,0,341,342,5,101,
        0,0,342,343,5,110,0,0,343,344,5,116,0,0,344,345,5,97,0,0,345,346,
        5,110,0,0,346,347,5,103,0,0,347,348,5,108,0,0,348,349,5,101,0,0,
        349,350,5,100,0,0,350,58,1,0,0,0,351,352,5,78,0,0,352,353,5,111,
        0,0,353,354,5,114,0,0,354,355,5,116,0,0,355,370,5,104,0,0,356,357,
        5,69,0,0,357,358,5,97,0,0,358,359,5,115,0,0,359,370,5,116,0,0,360,
        361,5,83,0,0,361,362,5,111,0,0,362,363,5,117,0,0,363,364,5,116,0,
        0,364,370,5,104,0,0,365,366,5,87,0,0,366,367,5,101,0,0,367,368,5,
        115,0,0,368,370,5,116,0,0,369,351,1,0,0,0,369,356,1,0,0,0,369,360,
        1,0,0,0,369,365,1,0,0,0,370,60,1,0,0,0,371,372,5,116,0,0,372,373,
        5,117,0,0,373,374,5,116,0,0,374,375,5,111,0,0,375,376,5,114,0,0,
        376,377,5,105,0,0,377,378,5,97,0,0,378,379,5,108,0,0,379,62,1,0,
        0,0,380,381,5,116,0,0,381,382,5,114,0,0,382,383,5,105,0,0,383,384,
        5,103,0,0,384,385,5,103,0,0,385,386,5,101,0,0,386,387,5,114,0,0,
        387,64,1,0,0,0,388,389,5,81,0,0,389,390,5,114,0,0,390,391,5,111,
        0,0,391,392,5,103,0,0,392,393,5,117,0,0,393,394,5,101,0,0,394,395,
        5,60,0,0,395,66,1,0,0,0,396,397,5,62,0,0,397,398,5,81,0,0,398,399,
        5,114,0,0,399,400,5,111,0,0,400,401,5,103,0,0,401,402,5,117,0,0,
        402,403,5,101,0,0,403,68,1,0,0,0,404,405,5,126,0,0,405,70,1,0,0,
        0,406,407,5,124,0,0,407,72,1,0,0,0,408,409,5,44,0,0,409,74,1,0,0,
        0,410,411,5,35,0,0,411,76,1,0,0,0,412,413,5,46,0,0,413,414,5,46,
        0,0,414,78,1,0,0,0,415,416,5,95,0,0,416,417,5,95,0,0,417,80,1,0,
        0,0,418,419,7,0,0,0,419,82,1,0,0,0,420,421,3,81,40,0,421,423,3,81,
        40,0,422,424,3,81,40,0,423,422,1,0,0,0,424,425,1,0,0,0,425,423,1,
        0,0,0,425,426,1,0,0,0,426,84,1,0,0,0,427,429,3,81,40,0,428,427,1,
        0,0,0,428,429,1,0,0,0,429,430,1,0,0,0,430,432,5,46,0,0,431,433,3,
        81,40,0,432,431,1,0,0,0,433,434,1,0,0,0,434,432,1,0,0,0,434,435,
        1,0,0,0,435,86,1,0,0,0,436,438,3,81,40,0,437,436,1,0,0,0,438,441,
        1,0,0,0,439,437,1,0,0,0,439,440,1,0,0,0,440,444,1,0,0,0,441,439,
        1,0,0,0,442,444,3,85,42,0,443,439,1,0,0,0,443,442,1,0,0,0,444,445,
        1,0,0,0,445,446,5,106,0,0,446,88,1,0,0,0,447,448,7,1,0,0,448,90,
        1,0,0,0,449,450,7,2,0,0,450,92,1,0,0,0,451,452,7,3,0,0,452,94,1,
        0,0,0,453,456,3,91,45,0,454,456,3,93,46,0,455,453,1,0,0,0,455,454,
        1,0,0,0,456,96,1,0,0,0,457,461,5,34,0,0,458,460,9,0,0,0,459,458,
        1,0,0,0,460,463,1,0,0,0,461,462,1,0,0,0,461,459,1,0,0,0,462,464,
        1,0,0,0,463,461,1,0,0,0,464,465,5,34,0,0,465,98,1,0,0,0,466,469,
        5,95,0,0,467,469,3,95,47,0,468,466,1,0,0,0,468,467,1,0,0,0,469,470,
        1,0,0,0,470,471,3,95,47,0,471,100,1,0,0,0,472,473,5,61,0,0,473,480,
        5,61,0,0,474,477,5,95,0,0,475,477,3,81,40,0,476,474,1,0,0,0,476,
        475,1,0,0,0,477,478,1,0,0,0,478,480,3,81,40,0,479,472,1,0,0,0,479,
        476,1,0,0,0,480,102,1,0,0,0,481,484,5,42,0,0,482,485,3,95,47,0,483,
        485,3,81,40,0,484,482,1,0,0,0,484,483,1,0,0,0,485,486,1,0,0,0,486,
        484,1,0,0,0,486,487,1,0,0,0,487,104,1,0,0,0,488,490,7,4,0,0,489,
        488,1,0,0,0,490,491,1,0,0,0,491,489,1,0,0,0,491,492,1,0,0,0,492,
        493,1,0,0,0,493,494,6,52,0,0,494,106,1,0,0,0,495,497,5,59,0,0,496,
        495,1,0,0,0,497,498,1,0,0,0,498,496,1,0,0,0,498,499,1,0,0,0,499,
        500,1,0,0,0,500,501,6,53,0,0,501,108,1,0,0,0,502,503,5,47,0,0,503,
        504,5,42,0,0,504,508,1,0,0,0,505,507,9,0,0,0,506,505,1,0,0,0,507,
        510,1,0,0,0,508,509,1,0,0,0,508,506,1,0,0,0,509,511,1,0,0,0,510,
        508,1,0,0,0,511,512,5,42,0,0,512,513,5,47,0,0,513,514,1,0,0,0,514,
        515,6,54,0,0,515,110,1,0,0,0,516,517,5,47,0,0,517,518,5,47,0,0,518,
        522,1,0,0,0,519,521,8,5,0,0,520,519,1,0,0,0,521,524,1,0,0,0,522,
        520,1,0,0,0,522,523,1,0,0,0,523,525,1,0,0,0,524,522,1,0,0,0,525,
        526,6,55,0,0,526,112,1,0,0,0,19,0,208,369,425,428,434,439,443,455,
        461,468,476,479,484,486,491,498,508,522,1,6,0,0
    ]

class QrogueAreasLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    LAYOUT = 8
    ROOMS = 9
    HALLWAYS = 10
    VISIBLE_LITERAL = 11
    FOGGY_LITERAL = 12
    WORLD_LITERAL = 13
    LEVEL_LITERAL = 14
    SPAWN_LITERAL = 15
    WILD_LITERAL = 16
    RIDDLE_LITERAL = 17
    BOSS_LITERAL = 18
    GATE_ROOM_LITERAL = 19
    TREASURE_LITERAL = 20
    CHALLENGE_LITERAL = 21
    PAUSE_LITERAL = 22
    STORY_LITERAL = 23
    OPEN_LITERAL = 24
    CLOSED_LITERAL = 25
    LOCKED_LITERAL = 26
    EVENT_LITERAL = 27
    PERMANENT_LITERAL = 28
    ENTANGLED_LITERAL = 29
    DIRECTION = 30
    TUTORIAL_LITERAL = 31
    TRIGGER_LITERAL = 32
    HEADER = 33
    ENDER = 34
    HORIZONTAL_SEPARATOR = 35
    VERTICAL_SEPARATOR = 36
    LIST_SEPARATOR = 37
    WALL = 38
    EMPTY_HALLWAY = 39
    EMPTY_ROOM = 40
    DIGIT = 41
    INTEGER = 42
    FLOAT = 43
    IMAG_NUMBER = 44
    SIGN = 45
    CHARACTER_LOW = 46
    CHARACTER_UP = 47
    CHARACTER = 48
    TEXT = 49
    ROOM_ID = 50
    HALLWAY_ID = 51
    REFERENCE = 52
    WS = 53
    UNIVERSAL_SEPARATOR = 54
    COMMENT = 55
    LINE_COMMENT = 56

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "':'", "'('", "')'", "'TODO: implement in importing grammar #override'", 
            "'one way'", "'['", "']'", "'[Layout]'", "'[Hallways]'", "'visible'", 
            "'foggy'", "'World'", "'Level'", "'Spawn'", "'Wild'", "'Riddle'", 
            "'Boss'", "'Gate'", "'Treasure'", "'Challenge'", "'Pause'", 
            "'Story'", "'open'", "'closed'", "'locked'", "'event'", "'permanent'", 
            "'entangled'", "'tutorial'", "'trigger'", "'Qrogue<'", "'>Qrogue'", 
            "'~'", "'|'", "','", "'#'", "'..'", "'__'" ]

    symbolicNames = [ "<INVALID>",
            "LAYOUT", "ROOMS", "HALLWAYS", "VISIBLE_LITERAL", "FOGGY_LITERAL", 
            "WORLD_LITERAL", "LEVEL_LITERAL", "SPAWN_LITERAL", "WILD_LITERAL", 
            "RIDDLE_LITERAL", "BOSS_LITERAL", "GATE_ROOM_LITERAL", "TREASURE_LITERAL", 
            "CHALLENGE_LITERAL", "PAUSE_LITERAL", "STORY_LITERAL", "OPEN_LITERAL", 
            "CLOSED_LITERAL", "LOCKED_LITERAL", "EVENT_LITERAL", "PERMANENT_LITERAL", 
            "ENTANGLED_LITERAL", "DIRECTION", "TUTORIAL_LITERAL", "TRIGGER_LITERAL", 
            "HEADER", "ENDER", "HORIZONTAL_SEPARATOR", "VERTICAL_SEPARATOR", 
            "LIST_SEPARATOR", "WALL", "EMPTY_HALLWAY", "EMPTY_ROOM", "DIGIT", 
            "INTEGER", "FLOAT", "IMAG_NUMBER", "SIGN", "CHARACTER_LOW", 
            "CHARACTER_UP", "CHARACTER", "TEXT", "ROOM_ID", "HALLWAY_ID", 
            "REFERENCE", "WS", "UNIVERSAL_SEPARATOR", "COMMENT", "LINE_COMMENT" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "LAYOUT", "ROOMS", "HALLWAYS", "VISIBLE_LITERAL", "FOGGY_LITERAL", 
                  "WORLD_LITERAL", "LEVEL_LITERAL", "SPAWN_LITERAL", "WILD_LITERAL", 
                  "RIDDLE_LITERAL", "BOSS_LITERAL", "GATE_ROOM_LITERAL", 
                  "TREASURE_LITERAL", "CHALLENGE_LITERAL", "PAUSE_LITERAL", 
                  "STORY_LITERAL", "OPEN_LITERAL", "CLOSED_LITERAL", "LOCKED_LITERAL", 
                  "EVENT_LITERAL", "PERMANENT_LITERAL", "ENTANGLED_LITERAL", 
                  "DIRECTION", "TUTORIAL_LITERAL", "TRIGGER_LITERAL", "HEADER", 
                  "ENDER", "HORIZONTAL_SEPARATOR", "VERTICAL_SEPARATOR", 
                  "LIST_SEPARATOR", "WALL", "EMPTY_HALLWAY", "EMPTY_ROOM", 
                  "DIGIT", "INTEGER", "FLOAT", "IMAG_NUMBER", "SIGN", "CHARACTER_LOW", 
                  "CHARACTER_UP", "CHARACTER", "TEXT", "ROOM_ID", "HALLWAY_ID", 
                  "REFERENCE", "WS", "UNIVERSAL_SEPARATOR", "COMMENT", "LINE_COMMENT" ]

    grammarFileName = "QrogueAreas.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.12.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


